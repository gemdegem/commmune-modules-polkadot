/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@polkadot";
exports.ids = ["vendor-chunks/@polkadot"];
exports.modules = {

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// Copyright 2019-2023 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// Generated as part of the build, do not edit\n\nexports.lenIn = 171008;\n\nexports.lenOut = 339468;\n\nexports.bytes = '';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/extension-dapp/bundle.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/extension-dapp/bundle.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWeb3Injected: () => (/* binding */ isWeb3Injected),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),\n/* harmony export */   unwrapBytes: () => (/* reexport safe */ _wrapBytes_js__WEBPACK_IMPORTED_MODULE_1__.unwrapBytes),\n/* harmony export */   web3Accounts: () => (/* binding */ web3Accounts),\n/* harmony export */   web3AccountsSubscribe: () => (/* binding */ web3AccountsSubscribe),\n/* harmony export */   web3Enable: () => (/* binding */ web3Enable),\n/* harmony export */   web3EnablePromise: () => (/* binding */ web3EnablePromise),\n/* harmony export */   web3FromAddress: () => (/* binding */ web3FromAddress),\n/* harmony export */   web3FromSource: () => (/* binding */ web3FromSource),\n/* harmony export */   web3ListRpcProviders: () => (/* binding */ web3ListRpcProviders),\n/* harmony export */   web3UseRpcProvider: () => (/* binding */ web3UseRpcProvider),\n/* harmony export */   wrapBytes: () => (/* reexport safe */ _wrapBytes_js__WEBPACK_IMPORTED_MODULE_1__.wrapBytes)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/object/spread.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/is/promise.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/eq.js\");\n/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util-crypto */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/encode.js\");\n/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/util-crypto */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util.js */ \"(ssr)/./node_modules/@polkadot/extension-dapp/util.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/extension-dapp/packageInfo.js\");\n/* harmony import */ var _wrapBytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapBytes.js */ \"(ssr)/./node_modules/@polkadot/extension-dapp/wrapBytes.js\");\n\n\n\n\n\nconst win = window;\nwin.injectedWeb3 = win.injectedWeb3 || {};\nlet isWeb3Injected = web3IsInjected();\nlet web3EnablePromise = null;\n\n/** @internal true when anything has been injected and is available */\nfunction web3IsInjected() {\n    return Object\n        .values(win.injectedWeb3)\n        .filter(({ connect, enable }) => !!(connect || enable))\n        .length !== 0;\n}\n/** @internal throw a consistent error when not extensions have not been enabled */\nfunction throwError(method) {\n    throw new Error(`${method}: web3Enable(originName) needs to be called before ${method}`);\n}\n/** @internal map from Array<InjectedAccount> to Array<InjectedAccountWithMeta> */\nfunction mapAccounts(source, list, ss58Format) {\n    return list.map(({ address, genesisHash, name, type }) => ({\n        address: address.length === 42\n            ? address\n            : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.encodeAddress)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.decodeAddress)(address), ss58Format),\n        meta: { genesisHash, name, source },\n        type\n    }));\n}\n/** @internal filter accounts based on genesisHash and type of account */\nfunction filterAccounts(list, genesisHash, type) {\n    return list.filter((a) => (!a.type || !type || type.includes(a.type)) &&\n        (!a.genesisHash || !genesisHash || a.genesisHash === genesisHash));\n}\n/** @internal retrieves all the extensions available on the window */\nfunction getWindowExtensions(originName) {\n    return Promise\n        .all(Object\n        .entries(win.injectedWeb3)\n        .map(([nameOrHash, { connect, enable, version }]) => Promise\n        .resolve()\n        .then(() => connect\n        // new style, returning all info\n        ? connect(originName)\n        : enable\n            // previous interface, leakages on name/version\n            ? enable(originName).then((e) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectSpread)({ name: nameOrHash, version: version || 'unknown' }, e))\n            : Promise.reject(new Error('No connect(..) or enable(...) hook found')))\n        .catch(({ message }) => {\n        console.error(`Error initializing ${nameOrHash}: ${message}`);\n    })))\n        .then((exts) => exts.filter((e) => !!e));\n}\n/** @internal Ensure the enable promise is resolved and filter by extensions */\nasync function filterEnable(caller, extensions) {\n    if (!web3EnablePromise) {\n        return throwError(caller);\n    }\n    const sources = await web3EnablePromise;\n    return sources.filter(({ name }) => !extensions ||\n        extensions.includes(name));\n}\n/**\n * @summary Enables all the providers found on the injected window interface\n * @description\n * Enables all injected extensions that has been found on the page. This\n * should be called before making use of any other web3* functions.\n */\nfunction web3Enable(originName, compatInits = []) {\n    if (!originName) {\n        throw new Error('You must pass a name for your app to the web3Enable function');\n    }\n    const initCompat = compatInits.length\n        ? Promise.all(compatInits.map((c) => c().catch(() => false)))\n        : Promise.resolve([true]);\n    web3EnablePromise = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.documentReadyPromise)(() => initCompat.then(() => getWindowExtensions(originName)\n        .then((values) => values.map((e) => {\n        // if we don't have an accounts subscriber, add a single-shot version\n        if (!e.accounts.subscribe) {\n            e.accounts.subscribe = (cb) => {\n                e.accounts\n                    .get()\n                    .then(cb)\n                    .catch(console.error);\n                return () => {\n                    // no ubsubscribe needed, this is a single-shot\n                };\n            };\n        }\n        return e;\n    }))\n        .catch(() => [])\n        .then((values) => {\n        const names = values.map(({ name, version }) => `${name}/${version}`);\n        isWeb3Injected = web3IsInjected();\n        console.info(`web3Enable: Enabled ${values.length} extension${values.length !== 1 ? 's' : ''}: ${names.join(', ')}`);\n        return values;\n    })));\n    return web3EnablePromise;\n}\n/**\n * @summary Retrieves all the accounts across all providers\n * @description\n * This returns the full list of account available (accross all extensions) to\n * the page. Filtereing options are available of a per-extension, per type and\n * per-genesisHash basis. Optionally the accounts can be encoded with the provided\n * ss58Format\n */\nasync function web3Accounts({ accountType, extensions, genesisHash, ss58Format } = {}) {\n    const accounts = [];\n    const sources = await filterEnable('web3Accounts', extensions);\n    const retrieved = await Promise.all(sources.map(async ({ accounts, name: source }) => {\n        try {\n            const list = await accounts.get();\n            return mapAccounts(source, filterAccounts(list, genesisHash, accountType), ss58Format);\n        }\n        catch {\n            // cannot handle this one\n            return [];\n        }\n    }));\n    retrieved.forEach((result) => {\n        accounts.push(...result);\n    });\n    console.info(`web3Accounts: Found ${accounts.length} address${accounts.length !== 1 ? 'es' : ''}`);\n    return accounts;\n}\n/**\n * @summary Subscribes to all the accounts across all providers\n * @description\n * This is the subscription version of the web3Accounts interface with\n * updates as to when new accounts do become available. The list of filtering\n * options are the same as for the web3Accounts interface.\n */\nasync function web3AccountsSubscribe(cb, { accountType, extensions, genesisHash, ss58Format } = {}) {\n    const sources = await filterEnable('web3AccountsSubscribe', extensions);\n    const accounts = {};\n    const triggerUpdate = () => cb(Object\n        .entries(accounts)\n        .reduce((result, [source, list]) => {\n        result.push(...mapAccounts(source, filterAccounts(list, genesisHash, accountType), ss58Format));\n        return result;\n    }, []));\n    const unsubs = sources.map(({ accounts: { subscribe }, name: source }) => subscribe((result) => {\n        accounts[source] = result;\n        try {\n            const result = triggerUpdate();\n            if (result && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isPromise)(result)) {\n                result.catch(console.error);\n            }\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }));\n    return () => {\n        unsubs.forEach((unsub) => {\n            unsub();\n        });\n    };\n}\n/**\n * @summary Finds a specific provider based on the name\n * @description\n * This retrieves a specific source (extension) based on the name. In most\n * cases it should not be needed to call it directly (e.g. it is used internally\n * by calls such as web3FromAddress) but would allow operation on a specific\n * known extension.\n */\nasync function web3FromSource(source) {\n    if (!web3EnablePromise) {\n        return throwError('web3FromSource');\n    }\n    const sources = await web3EnablePromise;\n    const found = source && sources.find(({ name }) => name === source);\n    if (!found) {\n        throw new Error(`web3FromSource: Unable to find an injected ${source}`);\n    }\n    return found;\n}\n/**\n * @summary Find a specific provider that provides a specific address\n * @description\n * Based on an address, return the provider that has makes this address\n * available to the page.\n */\nasync function web3FromAddress(address) {\n    if (!web3EnablePromise) {\n        return throwError('web3FromAddress');\n    }\n    const accounts = await web3Accounts();\n    let found;\n    if (address) {\n        const accountU8a = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.decodeAddress)(address);\n        found = accounts.find((account) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.u8aEq)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.decodeAddress)(account.address), accountU8a));\n    }\n    if (!found) {\n        throw new Error(`web3FromAddress: Unable to find injected ${address}`);\n    }\n    return web3FromSource(found.meta.source);\n}\n/**\n * @summary List all providers exposed by one source\n * @description\n * For extensions that supply RPC providers, this call would return the list\n * of RPC providers that any extension may supply.\n */\nasync function web3ListRpcProviders(source) {\n    const { provider } = await web3FromSource(source);\n    if (!provider) {\n        console.warn(`Extension ${source} does not expose any provider`);\n        return null;\n    }\n    return provider.listProviders();\n}\n/**\n * @summary Start an RPC provider provider by a specific source\n * @description\n * For extensions that supply RPC providers, this call would return an\n * enabled provider (initialized with the specific key) from the\n * specified extension source.\n */\nasync function web3UseRpcProvider(source, key) {\n    const { provider } = await web3FromSource(source);\n    if (!provider) {\n        throw new Error(`Extension ${source} does not expose any provider`);\n    }\n    const meta = await provider.startProvider(key);\n    return { meta, provider };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/extension-dapp/bundle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/extension-dapp/packageInfo.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/extension-dapp/packageInfo.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/extension-dapp', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/extension-dapp/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/extension-dapp/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '0.46.6' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L2V4dGVuc2lvbi1kYXBwL3BhY2thZ2VJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxzQkFBc0IseUNBQXlDLEtBQThCLFlBQVksK0hBQWUsZ0NBQWdDLCtIQUFlLG1DQUFtQyxDQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvZXh0ZW5zaW9uLWRhcHAvcGFja2FnZUluZm8uanM/ZWRhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3QvZXh0ZW5zaW9uLWRhcHAnLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcwLjQ2LjYnIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/extension-dapp/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/extension-dapp/util.js":
/*!*******************************************************!*\
  !*** ./node_modules/@polkadot/extension-dapp/util.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   documentReadyPromise: () => (/* binding */ documentReadyPromise)\n/* harmony export */ });\nfunction documentReadyPromise(creator) {\n    return new Promise((resolve) => {\n        if (document.readyState === 'complete') {\n            resolve(creator());\n        }\n        else {\n            window.addEventListener('load', () => resolve(creator()));\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L2V4dGVuc2lvbi1kYXBwL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9leHRlbnNpb24tZGFwcC91dGlsLmpzP2FlZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRvY3VtZW50UmVhZHlQcm9taXNlKGNyZWF0b3IpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHtcbiAgICAgICAgICAgIHJlc29sdmUoY3JlYXRvcigpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4gcmVzb2x2ZShjcmVhdG9yKCkpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/extension-dapp/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/extension-dapp/wrapBytes.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/extension-dapp/wrapBytes.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ETHEREUM: () => (/* binding */ ETHEREUM),\n/* harmony export */   POSTFIX: () => (/* binding */ POSTFIX),\n/* harmony export */   PREFIX: () => (/* binding */ PREFIX),\n/* harmony export */   isWrapped: () => (/* binding */ isWrapped),\n/* harmony export */   unwrapBytes: () => (/* binding */ unwrapBytes),\n/* harmony export */   wrapBytes: () => (/* binding */ wrapBytes)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/wrap.js\");\n\nconst ETHEREUM = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.U8A_WRAP_ETHEREUM;\nconst POSTFIX = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.U8A_WRAP_POSTFIX;\nconst PREFIX = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.U8A_WRAP_PREFIX;\nconst isWrapped = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aIsWrapped;\nconst unwrapBytes = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aUnwrapBytes;\nconst wrapBytes = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aWrapBytes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L2V4dGVuc2lvbi1kYXBwL3dyYXBCeXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtJO0FBQzNILGlCQUFpQiw2REFBaUI7QUFDbEMsZ0JBQWdCLDREQUFnQjtBQUNoQyxlQUFlLDJEQUFlO0FBQzlCLGtCQUFrQix3REFBWTtBQUM5QixvQkFBb0IsMERBQWM7QUFDbEMsa0JBQWtCLHdEQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvZXh0ZW5zaW9uLWRhcHAvd3JhcEJ5dGVzLmpzPzI0MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVThBX1dSQVBfRVRIRVJFVU0sIFU4QV9XUkFQX1BPU1RGSVgsIFU4QV9XUkFQX1BSRUZJWCwgdThhSXNXcmFwcGVkLCB1OGFVbndyYXBCeXRlcywgdThhV3JhcEJ5dGVzIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuZXhwb3J0IGNvbnN0IEVUSEVSRVVNID0gVThBX1dSQVBfRVRIRVJFVU07XG5leHBvcnQgY29uc3QgUE9TVEZJWCA9IFU4QV9XUkFQX1BPU1RGSVg7XG5leHBvcnQgY29uc3QgUFJFRklYID0gVThBX1dSQVBfUFJFRklYO1xuZXhwb3J0IGNvbnN0IGlzV3JhcHBlZCA9IHU4YUlzV3JhcHBlZDtcbmV4cG9ydCBjb25zdCB1bndyYXBCeXRlcyA9IHU4YVVud3JhcEJ5dGVzO1xuZXhwb3J0IGNvbnN0IHdyYXBCeXRlcyA9IHU4YVdyYXBCeXRlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/extension-dapp/wrapBytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/networks/defaults/genesis.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/networks/defaults/genesis.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownGenesis: () => (/* binding */ knownGenesis)\n/* harmony export */ });\nconst knownGenesis = {\n    acala: [\n        '0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'\n    ],\n    ajuna: [\n        '0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'\n    ],\n    'aleph-node': [\n        '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'\n    ],\n    astar: [\n        '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'\n    ],\n    basilisk: [\n        '0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'\n    ],\n    bifrost: [\n        '0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'\n    ],\n    'bifrost-kusama': [\n        '0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'\n    ],\n    bittensor: [\n        '0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03'\n    ],\n    centrifuge: [\n        '0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82',\n        '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'\n    ],\n    cere: [\n        '0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c'\n    ],\n    composable: [\n        '0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'\n    ],\n    darwinia: [\n        '0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6'\n    ],\n    'dock-mainnet': [\n        '0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae',\n        '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'\n    ],\n    edgeware: [\n        '0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'\n    ],\n    enjin: [\n        '0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9'\n    ],\n    equilibrium: [\n        '0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'\n    ],\n    genshiro: [\n        '0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'\n    ],\n    hydradx: [\n        '0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d', // HydraDX Parachain\n        '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n        '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n        '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n        '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n    ],\n    'interlay-parachain': [\n        '0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'\n    ],\n    karura: [\n        '0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'\n    ],\n    khala: [\n        '0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d'\n    ],\n    kulupu: [\n        '0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'\n    ],\n    kusama: [\n        '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n        '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n        '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n    ],\n    matrixchain: [\n        '0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615'\n    ],\n    nodle: [\n        '0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'\n    ],\n    origintrail: [\n        '0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174'\n    ],\n    p3d: [\n        '0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66'\n    ],\n    parallel: [\n        '0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'\n    ],\n    pendulum: [\n        '0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86'\n    ],\n    phala: [\n        '0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736'\n    ],\n    picasso: [\n        '0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc',\n        '0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'\n    ],\n    polkadex: [\n        '0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'\n    ],\n    polkadot: [\n        '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'\n    ],\n    polymesh: [\n        '0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'\n    ],\n    quartz: [\n        '0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554'\n    ],\n    rococo: [\n        '0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e',\n        '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897',\n        '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770',\n        '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff',\n        '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a',\n        '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9',\n        '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779',\n        '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215',\n        '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9',\n        '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147',\n        '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd',\n        '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'\n    ],\n    sora: [\n        '0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'\n    ],\n    stafi: [\n        '0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'\n    ],\n    statemine: [\n        '0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'\n    ],\n    statemint: [\n        '0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'\n    ],\n    subsocial: [\n        '0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'\n    ],\n    ternoa: [\n        '0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e'\n    ],\n    unique: [\n        '0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'\n    ],\n    vtb: [\n        '0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f',\n        '0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa'\n    ],\n    westend: [\n        '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'\n    ],\n    xxnetwork: [\n        '0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa'\n    ],\n    zeitgeist: [\n        '0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL2dlbmVzaXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9kZWZhdWx0cy9nZW5lc2lzLmpzPzM4YzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGtub3duR2VuZXNpcyA9IHtcbiAgICBhY2FsYTogW1xuICAgICAgICAnMHhmYzQxYjliZDhlZjhmZTUzZDU4YzdlYTY3Yzc5NGM3ZWM5YTczZGFmMDVlNmQ1NGIxNGZmNjM0MmM5OWJhNjRjJ1xuICAgIF0sXG4gICAgYWp1bmE6IFtcbiAgICAgICAgJzB4ZTM1OGViMWQxMWIzMTI1NWEyODZjMTJlNDRmZTY3ODBiN2VkYjE3MWQ2NTc5MDVhOTdlMzlmNzFkOWM2YzNlZSdcbiAgICBdLFxuICAgICdhbGVwaC1ub2RlJzogW1xuICAgICAgICAnMHg3MDI1NWI0ZDI4ZGUwZmM0ZTFhMTkzZDdlMTc1YWQxY2NlZjQzMTU5ODIxMWM1NTUzOGYxMDE4NjUxYTAzNDRlJ1xuICAgIF0sXG4gICAgYXN0YXI6IFtcbiAgICAgICAgJzB4OWViNzZjNTE4NGM0YWI4Njc5ZDJkNWQ4MTlmZGY5MGI5YzAwMTQwM2U5ZTE3ZGEyZTE0YjZkOGFlYzQwMjljNidcbiAgICBdLFxuICAgIGJhc2lsaXNrOiBbXG4gICAgICAgICcweGE4NWNmYjliOWZkNGQ2MjJhNWIyODI4OWEwMjM0N2FmOTg3ZDhmNzNmYTMxMDg0NTBlMmI0YTExYzFjZTU3NTUnXG4gICAgXSxcbiAgICBiaWZyb3N0OiBbXG4gICAgICAgICcweDI2MmUxYjJhZDcyODQ3NWZkNmZlODhlNjJkMzRjMjAwYWJlNmZkNjkzOTMxZGRhZDE0NDA1OWIxZWI4ODRlNWInXG4gICAgXSxcbiAgICAnYmlmcm9zdC1rdXNhbWEnOiBbXG4gICAgICAgICcweDlmMjhjNmE2OGUwZmM5NjQ2ZWZmNjQ5MzU2ODRmNmVlZWVjZTUyN2UzN2JiZTFmMjEzZDIyY2FhMWQ5ZDZiZWQnXG4gICAgXSxcbiAgICBiaXR0ZW5zb3I6IFtcbiAgICAgICAgJzB4MmYwNTU1Y2M3NmZjMjg0MGEyNWE2ZWEzYjk2MzcxNDY4MDZmMWY0NGIwOTBjMTc1ZmZkZTJhN2U1YWIzNmMwMydcbiAgICBdLFxuICAgIGNlbnRyaWZ1Z2U6IFtcbiAgICAgICAgJzB4YjNkYjQxNDIxNzAyZGY5YTdmY2FjNjJiNTNmZmVhYzg1Zjc4NTNjYzRlNjg5ZTBiOTNhZWIzZGIxOGMwOWQ4MicsXG4gICAgICAgICcweDY3ZGRkZjI2NzNiNjllNWY4NzVmNmYyNTI3NzQ5NTgzNDM5OGVhZmQ2N2Y0OTJlMDlmM2YzMzQ1ZTAwM2QxYjUnXG4gICAgXSxcbiAgICBjZXJlOiBbXG4gICAgICAgICcweDgxNDQzODM2YTlhMjRjYWFhMjNmMTI0MTg5N2QxMjM1NzE3NTM1NzExZDFkM2ZlMjRlYWU0ZmRjOTQyYzA5MmMnXG4gICAgXSxcbiAgICBjb21wb3NhYmxlOiBbXG4gICAgICAgICcweGRhYWI4ZGY3NzZlYjUyZWM2MDRhNWRmNWQzODhiYjYyYTA1MGEwYWFlYzQ1NTZhNjQyNjViOWQ0Mjc1NTU1MmQnXG4gICAgXSxcbiAgICBkYXJ3aW5pYTogW1xuICAgICAgICAnMHhlNzE1NzhiMzdhN2M3OTliMGFiNGVlODdmZmE2ZjA1OWE2Yjk4ZjcxZjA2ZmI4Yzg0YThkODgwMTNhNTQ4YWQ2J1xuICAgIF0sXG4gICAgJ2RvY2stbWFpbm5ldCc6IFtcbiAgICAgICAgJzB4NmJmZTI0ZGNhMmEzYmUxMGYyMjIxMjY3OGFjMTNhNjQ0NmVjNzY0MTAzYzBmMzQ3MWM3MTYwOWVhYzM4NGFhZScsXG4gICAgICAgICcweGY3MzQ2N2M2NTQ0YWE2OGRmMmVlNTQ2YjEzNWY5NTVjNDZiOTBmYTYyN2U5YjVkNzkzNWY0MTA2MWJiOGE1YTknXG4gICAgXSxcbiAgICBlZGdld2FyZTogW1xuICAgICAgICAnMHg3NDJhMmNhNzBjMmZkYTZjZWU0ZjhkZjk4ZDY0YzRjNjcwYTA1MmQ5NTY4MDU4OTgyZGFkOWQ1YTdhMTM1YzViJ1xuICAgIF0sXG4gICAgZW5qaW46IFtcbiAgICAgICAgJzB4ZDg3NjFkM2M4OGYyNmRjMTI4NzVjMDBkMzE2NWY3ZDY3MjQzZDU2ZmM4NWI0Y2YxOTkzNzYwMWE3OTE2ZTVhOSdcbiAgICBdLFxuICAgIGVxdWlsaWJyaXVtOiBbXG4gICAgICAgICcweDZmMWE4MDBkZTNkYWZmN2Y1ZTAzN2RkZjY2YWIyMmNlMDNhYjkxODc0ZGViZWRkYjEwODZmNWY3ZGJkNDg5MjUnXG4gICAgXSxcbiAgICBnZW5zaGlybzogW1xuICAgICAgICAnMHg5YjhjZWZjMGViNWM1NjhiNTI3OTk4YmRkNzZjMTg0ZTJiNzZhZTU2MWJlNzZlNDY2NzA3MjIzMDIxN2VhMjQzJ1xuICAgIF0sXG4gICAgaHlkcmFkeDogW1xuICAgICAgICAnMHhhZmRjMTg4ZjQ1YzcxZGFjYmFhMGI2MmUxNmE5MWY3MjZjN2I4Njk5YTk3NDhjZGY3MTU0NTlkZTZiN2YzNjZkJywgLy8gSHlkcmFEWCBQYXJhY2hhaW5cbiAgICAgICAgJzB4ZDJhNjIwYzI3ZWM1Y2JjNTYyMWZmOWE1MjI2ODk4OTUwNzRmN2NjYTBkMDhlNzEzNGE3ODA0ZTFhM2JhODZmYycsIC8vIFNuYWtlbmV0IEdlbjMtMVxuICAgICAgICAnMHgxMGFmNmU4NDIzNDQ3N2Q4NGRjNTcyYmFjMDc4OTgxM2IyNTRhYTQ5MDc2N2VkMDZmYjk1OTExOTFkMTA3M2Y5JywgLy8gU25ha2VuZXQgR2VuM1xuICAgICAgICAnMHgzZDc1NTA3ZGQ0NjMwMTc2N2U2MDEyNjU3OTFkYTFkOWNiNDdiNmViYzk0ZTg3MzQ3YjYzNWU1YmY1OGJkMDQ3JywgLy8gU25ha2VuZXQgR2VuMlxuICAgICAgICAnMHgwZWQzMmJmY2FiNGE4MzUxN2ZhYzg4ZjJhYTdjYmMyZjg4ZDNhYjkzYmU5YTEyYjYxODhhMDM2YmY4YTk0M2MyJyAvLyBTbmFrZW5ldCBHZW4xXG4gICAgXSxcbiAgICAnaW50ZXJsYXktcGFyYWNoYWluJzogW1xuICAgICAgICAnMHhiZjg4ZWZlNzBlOWUwZTkxNjQxNmU4YmVkNjFmMmI0NTcxN2Y1MTdkN2YzNTIzZTMzYzdiMDAxZTVmZmNiYzcyJ1xuICAgIF0sXG4gICAga2FydXJhOiBbXG4gICAgICAgICcweGJhZjVhYWJlNDA2NDZkMTFmMGVlOGFiYmRjNjRmNGE0Yjc2NzQ5MjVjYmEwOGU0YTA1ZmY5ZWJlZDZlMjEyNmInXG4gICAgXSxcbiAgICBraGFsYTogW1xuICAgICAgICAnMHhkNDM1NDBiYTZkM2ViNDg5N2MyOGE3N2Q0OGNiNWI3MjlmZWEzNzYwM2NiYmZjN2E4NmE3M2I3MmFkYjNiZThkJ1xuICAgIF0sXG4gICAga3VsdXB1OiBbXG4gICAgICAgICcweGY3YTk5ZDNjYjkyODUzZDAwZDUyNzVjOTcxYzEzMmMwNzQ2MzYyNTY1ODNmZWU1M2IzYmJlNjBkN2I4NzY5YmEnXG4gICAgXSxcbiAgICBrdXNhbWE6IFtcbiAgICAgICAgJzB4YjBhOGQ0OTMyODVjMmRmNzMyOTBkZmI3ZTYxZjg3MGYxN2I0MTgwMTE5N2ExNDljYTkzNjU0NDk5ZWEzZGFmZScsIC8vIEt1c2FtYSBDQzMsXG4gICAgICAgICcweGUzNzc3ZmE5MjJjYWZiZmYyMDBjYWRlYWVhMWE3NmJkNzg5OGFkNWI4OWY3ODQ4OTk5MDU4YjUwZTcxNWY2MzYnLCAvLyBLdXNhbWEgQ0MyXG4gICAgICAgICcweDNmZDdiOWViNmEwMDM3NmU1YmU2MWYwMWFiYjQyOWZmYjBiMTA0YmUwNWVhZmY0ZDQ1OGRhNDhmY2Q0MjViYWYnIC8vIEt1c2FtYSBDQzFcbiAgICBdLFxuICAgIG1hdHJpeGNoYWluOiBbXG4gICAgICAgICcweDNhZjRmZjQ4ZWM3NmQyZWZjODQ3NjczMGY0MjNhYzA3ZTI1YWQ0OGY1ZjRjOWRjMzljNzc4YjE2NGQ4MDg2MTUnXG4gICAgXSxcbiAgICBub2RsZTogW1xuICAgICAgICAnMHg5N2RhN2VkZTk4ZDdiYWQ0ZTM2YjRkNzM0YjYwNTU0MjVhM2JlMDM2ZGEyYTMzMmVhNWE3MDM3NjU2NDI3YTIxJ1xuICAgIF0sXG4gICAgb3JpZ2ludHJhaWw6IFtcbiAgICAgICAgJzB4ZTdlMDk2MjMyNGEzYjg2YzgzNDA0ZGJlYTQ4M2YyNWZiNWRhYjRjMjI0NzkxYzgxYjc1NmNmYzk0ODAwNjE3NCdcbiAgICBdLFxuICAgIHAzZDogW1xuICAgICAgICAnMHg2YzU4OTQ4MzdhZDg5YjZkOTJiMTE0YTJmYjNlYWZhOGZlM2QyNmE1NDg0OGUzNDQ3MDE1NDQyY2Q2ZWY0ZTY2J1xuICAgIF0sXG4gICAgcGFyYWxsZWw6IFtcbiAgICAgICAgJzB4ZTYxYTQxYzUzZjVkY2QwYmViMDlkZjkzYjM0NDAyYWFkYTQ0Y2IwNTExN2I3MTA1OWNjZTQwYTI3MjNhNGU5NydcbiAgICBdLFxuICAgIHBlbmR1bHVtOiBbXG4gICAgICAgICcweDVkM2MyOTg2MjJkNTYzNGVkMDE5YmY2MWVhNGI3MTY1NTAzMDAxNWJkZTliZWIwZDZhMjQ3NDM3MTQ0NjJjODYnXG4gICAgXSxcbiAgICBwaGFsYTogW1xuICAgICAgICAnMHgxYmI5NjlkODU5NjVlNGJiNWE2NTFhYmJlZGYyMWE1NGI2YjMxYTIxZjY2YjU0MDFjYzNmMWUyODYyNjhkNzM2J1xuICAgIF0sXG4gICAgcGljYXNzbzogW1xuICAgICAgICAnMHg2ODExYTMzOTY3M2M5ZGFhODk3OTQ0ZGNkYWM5OWM2ZTI5MzljYzg4MjQ1ZWQyMTk1MWEwYTNjOWEyYmU3NWJjJyxcbiAgICAgICAgJzB4ZThlN2YwZjRjNGY1YTAwNzIwYjQ4MjFkYmZkZGVmZWE3NDkwYmNmMGIxOTAwOTk2MWNjNDY5NTc5ODRlMmMxYydcbiAgICBdLFxuICAgIHBvbGthZGV4OiBbXG4gICAgICAgICcweDM5MjBiY2I0OTYwYTFlZWY1NTgwY2Q1MzY3ZmYzZjQzMGVlZjA1Mjc3NGY3ODQ2ODg1MmY3YjljYjM5ZjhhM2MnXG4gICAgXSxcbiAgICBwb2xrYWRvdDogW1xuICAgICAgICAnMHg5MWIxNzFiYjE1OGUyZDM4NDhmYTIzYTlmMWMyNTE4MmZiOGUyMDMxM2IyYzFlYjQ5MjE5ZGE3YTcwY2U5MGMzJ1xuICAgIF0sXG4gICAgcG9seW1lc2g6IFtcbiAgICAgICAgJzB4NmZiZDc0ZTVlMWQwYTYxZDUyY2NmZTlkNGFkYWVkMTZkZDNhN2NhYTM3YzZiYzRkMGMyZmExMmU4YjJmNDA2MydcbiAgICBdLFxuICAgIHF1YXJ0ejogW1xuICAgICAgICAnMHhjZDRkNzMyMjAxZWJlNWQ2YjAxNGVkZGEwNzFjNDIwM2UxNjg2NzMwNTMzMjMwMWRjOGQwOTIwNDRiMjhlNTU0J1xuICAgIF0sXG4gICAgcm9jb2NvOiBbXG4gICAgICAgICcweDY0MDhkZTc3MzdjNTljMjM4ODkwNTMzYWYyNTg5NmEyYzIwNjA4ZDhiMzgwYmIwMTAyOWFjYjM5Mjc4MTA2M2UnLFxuICAgICAgICAnMHhhYWYyY2QxYjc0YjVmNzI2ODk1OTIxMjU5NDIxYjUzNDEyNDcyNjI2Mzk4MjUyMjE3NDE0NzA0NmI4ODI3ODk3JyxcbiAgICAgICAgJzB4MDM3ZjVmM2M4ZTY3YjMxNDA2MjAyNWZjODg2ZmNkNjIzOGVhMjVhNGE5YjQ1ZGNlOGQyNDY4MTVjOWViZTc3MCcsXG4gICAgICAgICcweGMxOTZmODEyNjBjZjE2ODYxNzJiNDdhNzljZjAwMjEyMDczNWQ3Y2IwZWIxNDc0ZThhZGNlNTY2MTg0NTZmZmYnLFxuICAgICAgICAnMHhmNmU5OTgzYzM3YmFmNjg4NDZmZWRhZmUyMWU1NjcxODc5MGUzOWZiMWM1ODJhYmM0MDhiODFiYzdiMjA4ZjlhJyxcbiAgICAgICAgJzB4NWZjZTY4N2RhMzkzMDVkZmU2ODJiMTE3ZjA4MjBiMzE5MzQ4ZThiYjM3ZWIxNmNmMzRhY2JmNmEyMDJkZTlkOScsXG4gICAgICAgICcweGU3YzNkNWVkZGU3ZGI5NjQzMTdjZDliNTFhM2EwNTlkN2NkOTlmODFiZGJjZTE0OTkwMDQ3MzU0MzM0Yzk3NzknLFxuICAgICAgICAnMHgxNjExZTFkYmYwNDA1Mzc5Yjg2MWUyZTI3ZGFhOTBmNDgwYjJlNmQzNjgyNDE0YTgwODM1YTUyZThjYjhhMjE1JyxcbiAgICAgICAgJzB4MzQzNDQyZjEyZmE3MTU0ODlhODcxNGU3OWE3YjI2NGVhODhjMGQ1YjhjNjZiNjg0YTc3ODhhNTE2MDMyZjZiOScsXG4gICAgICAgICcweDc4YmNkNTMwYzZiM2EwNjhiYzE3NDczY2Y1ZDJhZmY5YzI4NzEwMmJlZDlhZjNhZTNjNDFjMzNiOWQ2YzYxNDcnLFxuICAgICAgICAnMHg0NzM4MWVlMDY5NzE1M2Q2NDQwNGZjNTc4MzkyYzhmZDVjYmE5MDczMzkxOTA4ZjQ2Yzg4ODQ5ODQxNTY0N2JkJyxcbiAgICAgICAgJzB4MTljMGU0ZmE4YWI3NWY1YWM3ODY1ZTBiOGY3NGZmOTFlYjlhMTAwZDMzNmY0MjNjZDAxM2E4YmVmYmE0MDI5OSdcbiAgICBdLFxuICAgIHNvcmE6IFtcbiAgICAgICAgJzB4N2U0ZTMyZDBmZWFmZDRmOWM5NDE0YjBiZTg2MzczZjlhMWVmYTkwNDgwOWI2ODM0NTNhOWFmNjg1NmQzOGFkNSdcbiAgICBdLFxuICAgIHN0YWZpOiBbXG4gICAgICAgICcweDI5MGE0MTQ5ZjA5ZWEwZTQwMmM3NGMxYzdlOTZhZTQyMzk1ODg1NzdmZTc4OTMyZjk0ZjU0MDRjNjgyNDNkODAnXG4gICAgXSxcbiAgICBzdGF0ZW1pbmU6IFtcbiAgICAgICAgJzB4NDgyMzllZjYwN2Q3OTI4ODc0MDI3YTQzYTY3Njg5MjA5NzI3ZGZiM2QzZGM1ZTViMDNhMzliZGMyZWRhNzcxYSdcbiAgICBdLFxuICAgIHN0YXRlbWludDogW1xuICAgICAgICAnMHg2OGQ1NmYxNWY4NWQzMTM2OTcwZWMxNjk0NjA0MGJjMTc1MjY1NGU5MDYxNDdmN2U0M2U5ZDUzOWQ3YzNkZTJmJ1xuICAgIF0sXG4gICAgc3Vic29jaWFsOiBbXG4gICAgICAgICcweDBiZDcyYzFjMzA1MTcyZTEyNzUyNzhhYWViM2YxNjFlMDJlY2NiN2E4MTllNjNmNjJkNDdiZDUzYTI4MTg5ZjgnXG4gICAgXSxcbiAgICB0ZXJub2E6IFtcbiAgICAgICAgJzB4Njg1OWM4MWNhOTVlZjYyNGM5ZGZlNGRjNmUzMzgxYzMzZTVkNjUwOWUzNWUxNDcwOTJiZmJjNzgwZjc3N2M0ZSdcbiAgICBdLFxuICAgIHVuaXF1ZTogW1xuICAgICAgICAnMHg4NDMyMmQ5Y2RkYmYzNTA4OGYxZTU0ZTlhODVjOTY3YTQxYTU2YTRmNDM0NDU3NjgxMjVlNjFhZjE2NmM3ZDMxJ1xuICAgIF0sXG4gICAgdnRiOiBbXG4gICAgICAgICcweDI4NmJjODQxNGM3MDAwY2UxZDZlZTZhODM0ZTI5YTU0YzE3ODQ4MTRiNzYyNDNlYjc3ZWQwYjJjNTU3M2M2MGYnLFxuICAgICAgICAnMHg3NDgzYjg5NTcyZmIyYmQ2ODdjN2I5YTkzYjI0MmQwYjIzN2Y5YWJhNDYzYWJhMDdlYzI0NTAzOTMxMDM4YWFhJ1xuICAgIF0sXG4gICAgd2VzdGVuZDogW1xuICAgICAgICAnMHhlMTQzZjIzODAzYWM1MGU4ZjZmOGU2MjY5NWQxY2U5ZTRlMWQ2OGFhMzZjMWNkMmNmZDE1MzQwMjEzZjM0MjNlJ1xuICAgIF0sXG4gICAgeHhuZXR3b3JrOiBbXG4gICAgICAgICcweDUwZGQ1ZDIwNjkxN2JmMTA1MDJjNjhmYjRkMThhNTlmYzhhYTMxNTg2ZjRlODg1NmI0OTNlNDM1NDRhYTgyYWEnXG4gICAgXSxcbiAgICB6ZWl0Z2Vpc3Q6IFtcbiAgICAgICAgJzB4MWJmMmEyZWNiNGE4NjhkZTY2ZWE4NjEwZjJjZTdjOGM0MzcwNjU2MWI2NDc2MDMxMzE1ZjY2NDBmZTM4ZTA2MCdcbiAgICBdXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/networks/defaults/genesis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/networks/defaults/icons.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/networks/defaults/icons.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownIcon: () => (/* binding */ knownIcon)\n/* harmony export */ });\nconst knownIcon = {\n    centrifuge: 'polkadot',\n    kusama: 'polkadot',\n    polkadot: 'polkadot',\n    sora: 'polkadot',\n    statemine: 'polkadot',\n    statemint: 'polkadot',\n    westmint: 'polkadot'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL2ljb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9kZWZhdWx0cy9pY29ucy5qcz82MTEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBrbm93bkljb24gPSB7XG4gICAgY2VudHJpZnVnZTogJ3BvbGthZG90JyxcbiAgICBrdXNhbWE6ICdwb2xrYWRvdCcsXG4gICAgcG9sa2Fkb3Q6ICdwb2xrYWRvdCcsXG4gICAgc29yYTogJ3BvbGthZG90JyxcbiAgICBzdGF0ZW1pbmU6ICdwb2xrYWRvdCcsXG4gICAgc3RhdGVtaW50OiAncG9sa2Fkb3QnLFxuICAgIHdlc3RtaW50OiAncG9sa2Fkb3QnXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/networks/defaults/icons.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/networks/defaults/ledger.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/networks/defaults/ledger.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownLedger: () => (/* binding */ knownLedger)\n/* harmony export */ });\nconst knownLedger = {\n    acala: 0x00000313,\n    ajuna: 0x00000162,\n    'aleph-node': 0x00000283,\n    astar: 0x0000032a,\n    bifrost: 0x00000314,\n    'bifrost-kusama': 0x00000314,\n    centrifuge: 0x000002eb,\n    composable: 0x00000162,\n    darwinia: 0x00000162,\n    'dock-mainnet': 0x00000252,\n    edgeware: 0x0000020b,\n    enjin: 0x00000483,\n    equilibrium: 0x05f5e0fd,\n    genshiro: 0x05f5e0fc,\n    hydradx: 0x00000162,\n    'interlay-parachain': 0x00000162,\n    karura: 0x000002ae,\n    khala: 0x000001b2,\n    kusama: 0x000001b2,\n    matrixchain: 0x00000483,\n    nodle: 0x000003eb,\n    origintrail: 0x00000162,\n    parallel: 0x00000162,\n    pendulum: 0x00000162,\n    phala: 0x00000162,\n    picasso: 0x000001b2,\n    polkadex: 0x0000031f,\n    polkadot: 0x00000162,\n    polymesh: 0x00000253,\n    quartz: 0x00000277,\n    sora: 0x00000269,\n    stafi: 0x0000038b,\n    statemine: 0x000001b2, // common-good on Kusama, shares derivation\n    statemint: 0x00000162, // common-good on Polkadot, shares derivation\n    ternoa: 0x00003e3,\n    unique: 0x00000295,\n    vtb: 0x000002b6,\n    xxnetwork: 0x000007a3,\n    zeitgeist: 0x00000162\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL2xlZGdlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL2xlZGdlci5qcz9kYjE4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBrbm93bkxlZGdlciA9IHtcbiAgICBhY2FsYTogMHgwMDAwMDMxMyxcbiAgICBhanVuYTogMHgwMDAwMDE2MixcbiAgICAnYWxlcGgtbm9kZSc6IDB4MDAwMDAyODMsXG4gICAgYXN0YXI6IDB4MDAwMDAzMmEsXG4gICAgYmlmcm9zdDogMHgwMDAwMDMxNCxcbiAgICAnYmlmcm9zdC1rdXNhbWEnOiAweDAwMDAwMzE0LFxuICAgIGNlbnRyaWZ1Z2U6IDB4MDAwMDAyZWIsXG4gICAgY29tcG9zYWJsZTogMHgwMDAwMDE2MixcbiAgICBkYXJ3aW5pYTogMHgwMDAwMDE2MixcbiAgICAnZG9jay1tYWlubmV0JzogMHgwMDAwMDI1MixcbiAgICBlZGdld2FyZTogMHgwMDAwMDIwYixcbiAgICBlbmppbjogMHgwMDAwMDQ4MyxcbiAgICBlcXVpbGlicml1bTogMHgwNWY1ZTBmZCxcbiAgICBnZW5zaGlybzogMHgwNWY1ZTBmYyxcbiAgICBoeWRyYWR4OiAweDAwMDAwMTYyLFxuICAgICdpbnRlcmxheS1wYXJhY2hhaW4nOiAweDAwMDAwMTYyLFxuICAgIGthcnVyYTogMHgwMDAwMDJhZSxcbiAgICBraGFsYTogMHgwMDAwMDFiMixcbiAgICBrdXNhbWE6IDB4MDAwMDAxYjIsXG4gICAgbWF0cml4Y2hhaW46IDB4MDAwMDA0ODMsXG4gICAgbm9kbGU6IDB4MDAwMDAzZWIsXG4gICAgb3JpZ2ludHJhaWw6IDB4MDAwMDAxNjIsXG4gICAgcGFyYWxsZWw6IDB4MDAwMDAxNjIsXG4gICAgcGVuZHVsdW06IDB4MDAwMDAxNjIsXG4gICAgcGhhbGE6IDB4MDAwMDAxNjIsXG4gICAgcGljYXNzbzogMHgwMDAwMDFiMixcbiAgICBwb2xrYWRleDogMHgwMDAwMDMxZixcbiAgICBwb2xrYWRvdDogMHgwMDAwMDE2MixcbiAgICBwb2x5bWVzaDogMHgwMDAwMDI1MyxcbiAgICBxdWFydHo6IDB4MDAwMDAyNzcsXG4gICAgc29yYTogMHgwMDAwMDI2OSxcbiAgICBzdGFmaTogMHgwMDAwMDM4YixcbiAgICBzdGF0ZW1pbmU6IDB4MDAwMDAxYjIsIC8vIGNvbW1vbi1nb29kIG9uIEt1c2FtYSwgc2hhcmVzIGRlcml2YXRpb25cbiAgICBzdGF0ZW1pbnQ6IDB4MDAwMDAxNjIsIC8vIGNvbW1vbi1nb29kIG9uIFBvbGthZG90LCBzaGFyZXMgZGVyaXZhdGlvblxuICAgIHRlcm5vYTogMHgwMDAwM2UzLFxuICAgIHVuaXF1ZTogMHgwMDAwMDI5NSxcbiAgICB2dGI6IDB4MDAwMDAyYjYsXG4gICAgeHhuZXR3b3JrOiAweDAwMDAwN2EzLFxuICAgIHplaXRnZWlzdDogMHgwMDAwMDE2MlxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/networks/defaults/ledger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/networks/defaults/testnets.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/networks/defaults/testnets.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   knownTestnet: () => (/* binding */ knownTestnet)\n/* harmony export */ });\nconst knownTestnet = {\n    '': true, // this is the default non-network entry\n    'cess-testnet': true,\n    'dock-testnet': true,\n    jupiter: true,\n    'mathchain-testnet': true,\n    p3dt: true,\n    subspace_testnet: true,\n    'zero-alphaville': true\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL3Rlc3RuZXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2RlZmF1bHRzL3Rlc3RuZXRzLmpzP2IwZDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGtub3duVGVzdG5ldCA9IHtcbiAgICAnJzogdHJ1ZSwgLy8gdGhpcyBpcyB0aGUgZGVmYXVsdCBub24tbmV0d29yayBlbnRyeVxuICAgICdjZXNzLXRlc3RuZXQnOiB0cnVlLFxuICAgICdkb2NrLXRlc3RuZXQnOiB0cnVlLFxuICAgIGp1cGl0ZXI6IHRydWUsXG4gICAgJ21hdGhjaGFpbi10ZXN0bmV0JzogdHJ1ZSxcbiAgICBwM2R0OiB0cnVlLFxuICAgIHN1YnNwYWNlX3Rlc3RuZXQ6IHRydWUsXG4gICAgJ3plcm8tYWxwaGF2aWxsZSc6IHRydWVcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/networks/defaults/testnets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/networks/interfaces.js":
/*!*******************************************************!*\
  !*** ./node_modules/@polkadot/networks/interfaces.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allNetworks: () => (/* binding */ allNetworks),\n/* harmony export */   availableNetworks: () => (/* binding */ availableNetworks),\n/* harmony export */   selectableNetworks: () => (/* binding */ selectableNetworks)\n/* harmony export */ });\n/* harmony import */ var _substrate_ss58_registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @substrate/ss58-registry */ \"(ssr)/./node_modules/@substrate/ss58-registry/esm/index.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults/index.js */ \"(ssr)/./node_modules/@polkadot/networks/defaults/ledger.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults/index.js */ \"(ssr)/./node_modules/@polkadot/networks/defaults/genesis.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaults/index.js */ \"(ssr)/./node_modules/@polkadot/networks/defaults/icons.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"(ssr)/./node_modules/@polkadot/networks/defaults/testnets.js\");\n\n\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\nfunction toExpanded(o) {\n    const network = o.network || '';\n    const nameParts = network.replace(/_/g, '-').split('-');\n    const n = o;\n    // ledger additions\n    n.slip44 = _defaults_index_js__WEBPACK_IMPORTED_MODULE_1__.knownLedger[network];\n    n.hasLedgerSupport = !!n.slip44;\n    // general items\n    n.genesisHash = _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__.knownGenesis[network] || [];\n    n.icon = _defaults_index_js__WEBPACK_IMPORTED_MODULE_3__.knownIcon[network] || 'substrate';\n    // filtering\n    n.isTestnet = !!_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__.knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n    n.isIgnored = n.isTestnet || (!(o.standardAccount &&\n        o.decimals?.length &&\n        o.symbols?.length) &&\n        o.prefix !== 42);\n    return n;\n}\nfunction filterSelectable({ genesisHash, prefix }) {\n    return !!genesisHash.length || prefix === 42;\n}\nfunction filterAvailable(n) {\n    return !n.isIgnored && !!n.network;\n}\nfunction sortNetworks(a, b) {\n    const isUnSortedA = UNSORTED.includes(a.prefix);\n    const isUnSortedB = UNSORTED.includes(b.prefix);\n    return isUnSortedA === isUnSortedB\n        ? isUnSortedA\n            ? 0\n            : a.displayName.localeCompare(b.displayName)\n        : isUnSortedA\n            ? -1\n            : 1;\n}\nconst allNetworks = _substrate_ss58_registry__WEBPACK_IMPORTED_MODULE_0__[\"default\"].map(toExpanded);\nconst availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);\nconst selectableNetworks = availableNetworks.filter(filterSelectable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L25ldHdvcmtzL2ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDbUM7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJEQUFXO0FBQzFCO0FBQ0E7QUFDQSxvQkFBb0IsNERBQVk7QUFDaEMsYUFBYSx5REFBUztBQUN0QjtBQUNBLG9CQUFvQiw0REFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIscUJBQXFCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0JBQW9CLGdFQUFjO0FBQ2xDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC9uZXR3b3Jrcy9pbnRlcmZhY2VzLmpzPzBlMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGtub3duU3Vic3RyYXRlIGZyb20gJ0BzdWJzdHJhdGUvc3M1OC1yZWdpc3RyeSc7XG5pbXBvcnQgeyBrbm93bkdlbmVzaXMsIGtub3duSWNvbiwga25vd25MZWRnZXIsIGtub3duVGVzdG5ldCB9IGZyb20gJy4vZGVmYXVsdHMvaW5kZXguanMnO1xuY29uc3QgVU5TT1JURUQgPSBbMCwgMiwgNDJdO1xuY29uc3QgVEVTVE5FVFMgPSBbJ3Rlc3RuZXQnXTtcbmZ1bmN0aW9uIHRvRXhwYW5kZWQobykge1xuICAgIGNvbnN0IG5ldHdvcmsgPSBvLm5ldHdvcmsgfHwgJyc7XG4gICAgY29uc3QgbmFtZVBhcnRzID0gbmV0d29yay5yZXBsYWNlKC9fL2csICctJykuc3BsaXQoJy0nKTtcbiAgICBjb25zdCBuID0gbztcbiAgICAvLyBsZWRnZXIgYWRkaXRpb25zXG4gICAgbi5zbGlwNDQgPSBrbm93bkxlZGdlcltuZXR3b3JrXTtcbiAgICBuLmhhc0xlZGdlclN1cHBvcnQgPSAhIW4uc2xpcDQ0O1xuICAgIC8vIGdlbmVyYWwgaXRlbXNcbiAgICBuLmdlbmVzaXNIYXNoID0ga25vd25HZW5lc2lzW25ldHdvcmtdIHx8IFtdO1xuICAgIG4uaWNvbiA9IGtub3duSWNvbltuZXR3b3JrXSB8fCAnc3Vic3RyYXRlJztcbiAgICAvLyBmaWx0ZXJpbmdcbiAgICBuLmlzVGVzdG5ldCA9ICEha25vd25UZXN0bmV0W25ldHdvcmtdIHx8IFRFU1RORVRTLmluY2x1ZGVzKG5hbWVQYXJ0c1tuYW1lUGFydHMubGVuZ3RoIC0gMV0pO1xuICAgIG4uaXNJZ25vcmVkID0gbi5pc1Rlc3RuZXQgfHwgKCEoby5zdGFuZGFyZEFjY291bnQgJiZcbiAgICAgICAgby5kZWNpbWFscz8ubGVuZ3RoICYmXG4gICAgICAgIG8uc3ltYm9scz8ubGVuZ3RoKSAmJlxuICAgICAgICBvLnByZWZpeCAhPT0gNDIpO1xuICAgIHJldHVybiBuO1xufVxuZnVuY3Rpb24gZmlsdGVyU2VsZWN0YWJsZSh7IGdlbmVzaXNIYXNoLCBwcmVmaXggfSkge1xuICAgIHJldHVybiAhIWdlbmVzaXNIYXNoLmxlbmd0aCB8fCBwcmVmaXggPT09IDQyO1xufVxuZnVuY3Rpb24gZmlsdGVyQXZhaWxhYmxlKG4pIHtcbiAgICByZXR1cm4gIW4uaXNJZ25vcmVkICYmICEhbi5uZXR3b3JrO1xufVxuZnVuY3Rpb24gc29ydE5ldHdvcmtzKGEsIGIpIHtcbiAgICBjb25zdCBpc1VuU29ydGVkQSA9IFVOU09SVEVELmluY2x1ZGVzKGEucHJlZml4KTtcbiAgICBjb25zdCBpc1VuU29ydGVkQiA9IFVOU09SVEVELmluY2x1ZGVzKGIucHJlZml4KTtcbiAgICByZXR1cm4gaXNVblNvcnRlZEEgPT09IGlzVW5Tb3J0ZWRCXG4gICAgICAgID8gaXNVblNvcnRlZEFcbiAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgOiBhLmRpc3BsYXlOYW1lLmxvY2FsZUNvbXBhcmUoYi5kaXNwbGF5TmFtZSlcbiAgICAgICAgOiBpc1VuU29ydGVkQVxuICAgICAgICAgICAgPyAtMVxuICAgICAgICAgICAgOiAxO1xufVxuZXhwb3J0IGNvbnN0IGFsbE5ldHdvcmtzID0ga25vd25TdWJzdHJhdGUubWFwKHRvRXhwYW5kZWQpO1xuZXhwb3J0IGNvbnN0IGF2YWlsYWJsZU5ldHdvcmtzID0gYWxsTmV0d29ya3MuZmlsdGVyKGZpbHRlckF2YWlsYWJsZSkuc29ydChzb3J0TmV0d29ya3MpO1xuZXhwb3J0IGNvbnN0IHNlbGVjdGFibGVOZXR3b3JrcyA9IGF2YWlsYWJsZU5ldHdvcmtzLmZpbHRlcihmaWx0ZXJTZWxlY3RhYmxlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/networks/interfaces.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/address/checksum.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/checksum.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddressChecksum: () => (/* binding */ checkAddressChecksum)\n/* harmony export */ });\n/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sshash.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/sshash.js\");\n\nfunction checkAddressChecksum(decoded) {\n    const ss58Length = (decoded[0] & 64) ? 2 : 1;\n    const ss58Decoded = ss58Length === 1\n        ? decoded[0]\n        : ((decoded[0] & 63) << 2) | (decoded[1] >> 6) | ((decoded[1] & 63) << 8);\n    // 32/33 bytes public + 2 bytes checksum + prefix\n    const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n    const length = decoded.length - (isPublicKey ? 2 : 1);\n    // calculate the hash and do the checksum byte checks\n    const hash = (0,_sshash_js__WEBPACK_IMPORTED_MODULE_0__.sshash)(decoded.subarray(0, length));\n    const isValid = (decoded[0] & 128) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey\n        ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1]\n        : decoded[decoded.length - 1] === hash[0]);\n    return [isValid, length, ss58Length, ss58Decoded];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvY2hlY2tzdW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7QUFDOUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGtEQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL2NoZWNrc3VtLmpzPzA4MTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3NoYXNoIH0gZnJvbSAnLi9zc2hhc2guanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrQWRkcmVzc0NoZWNrc3VtKGRlY29kZWQpIHtcbiAgICBjb25zdCBzczU4TGVuZ3RoID0gKGRlY29kZWRbMF0gJiA2NCkgPyAyIDogMTtcbiAgICBjb25zdCBzczU4RGVjb2RlZCA9IHNzNThMZW5ndGggPT09IDFcbiAgICAgICAgPyBkZWNvZGVkWzBdXG4gICAgICAgIDogKChkZWNvZGVkWzBdICYgNjMpIDw8IDIpIHwgKGRlY29kZWRbMV0gPj4gNikgfCAoKGRlY29kZWRbMV0gJiA2MykgPDwgOCk7XG4gICAgLy8gMzIvMzMgYnl0ZXMgcHVibGljICsgMiBieXRlcyBjaGVja3N1bSArIHByZWZpeFxuICAgIGNvbnN0IGlzUHVibGljS2V5ID0gWzM0ICsgc3M1OExlbmd0aCwgMzUgKyBzczU4TGVuZ3RoXS5pbmNsdWRlcyhkZWNvZGVkLmxlbmd0aCk7XG4gICAgY29uc3QgbGVuZ3RoID0gZGVjb2RlZC5sZW5ndGggLSAoaXNQdWJsaWNLZXkgPyAyIDogMSk7XG4gICAgLy8gY2FsY3VsYXRlIHRoZSBoYXNoIGFuZCBkbyB0aGUgY2hlY2tzdW0gYnl0ZSBjaGVja3NcbiAgICBjb25zdCBoYXNoID0gc3NoYXNoKGRlY29kZWQuc3ViYXJyYXkoMCwgbGVuZ3RoKSk7XG4gICAgY29uc3QgaXNWYWxpZCA9IChkZWNvZGVkWzBdICYgMTI4KSA9PT0gMCAmJiAhWzQ2LCA0N10uaW5jbHVkZXMoZGVjb2RlZFswXSkgJiYgKGlzUHVibGljS2V5XG4gICAgICAgID8gZGVjb2RlZFtkZWNvZGVkLmxlbmd0aCAtIDJdID09PSBoYXNoWzBdICYmIGRlY29kZWRbZGVjb2RlZC5sZW5ndGggLSAxXSA9PT0gaGFzaFsxXVxuICAgICAgICA6IGRlY29kZWRbZGVjb2RlZC5sZW5ndGggLSAxXSA9PT0gaGFzaFswXSk7XG4gICAgcmV0dXJuIFtpc1ZhbGlkLCBsZW5ndGgsIHNzNThMZW5ndGgsIHNzNThEZWNvZGVkXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/address/checksum.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/address/decode.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/decode.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAddress: () => (/* binding */ decodeAddress)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base58/index.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/base58/bs58.js\");\n/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checksum.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/checksum.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/defaults.js\");\n\n\n\n\nfunction decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n    if (!encoded) {\n        throw new Error('Invalid empty address passed');\n    }\n    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(encoded) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isHex)(encoded)) {\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(encoded);\n    }\n    try {\n        const decoded = (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_3__.base58Decode)(encoded);\n        if (!_defaults_js__WEBPACK_IMPORTED_MODULE_4__.defaults.allowedEncodedLengths.includes(decoded.length)) {\n            throw new Error('Invalid decoded address length');\n        }\n        const [isValid, endPos, ss58Length, ss58Decoded] = (0,_checksum_js__WEBPACK_IMPORTED_MODULE_5__.checkAddressChecksum)(decoded);\n        if (!isValid && !ignoreChecksum) {\n            throw new Error('Invalid decoded address checksum');\n        }\n        else if (ss58Format !== -1 && ss58Format !== ss58Decoded) {\n            throw new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n        }\n        return decoded.slice(ss58Length, endPos);\n    }\n    catch (error) {\n        throw new Error(`Decoding ${encoded}: ${error.message}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZGVjb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0Q7QUFDTjtBQUNHO0FBQ1o7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFLLGFBQWEscURBQUs7QUFDL0IsZUFBZSx3REFBUTtBQUN2QjtBQUNBO0FBQ0Esd0JBQXdCLDhEQUFZO0FBQ3BDLGFBQWEsa0RBQVE7QUFDckI7QUFDQTtBQUNBLDJEQUEyRCxrRUFBb0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsV0FBVyxhQUFhLFlBQVk7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUSxJQUFJLGNBQWM7QUFDOUQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZGVjb2RlLmpzP2IwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNIZXgsIGlzVThhLCB1OGFUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbmltcG9ydCB7IGJhc2U1OERlY29kZSB9IGZyb20gJy4uL2Jhc2U1OC9pbmRleC5qcyc7XG5pbXBvcnQgeyBjaGVja0FkZHJlc3NDaGVja3N1bSB9IGZyb20gJy4vY2hlY2tzdW0uanMnO1xuaW1wb3J0IHsgZGVmYXVsdHMgfSBmcm9tICcuL2RlZmF1bHRzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBZGRyZXNzKGVuY29kZWQsIGlnbm9yZUNoZWNrc3VtLCBzczU4Rm9ybWF0ID0gLTEpIHtcbiAgICBpZiAoIWVuY29kZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVtcHR5IGFkZHJlc3MgcGFzc2VkJyk7XG4gICAgfVxuICAgIGlmIChpc1U4YShlbmNvZGVkKSB8fCBpc0hleChlbmNvZGVkKSkge1xuICAgICAgICByZXR1cm4gdThhVG9VOGEoZW5jb2RlZCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBiYXNlNThEZWNvZGUoZW5jb2RlZCk7XG4gICAgICAgIGlmICghZGVmYXVsdHMuYWxsb3dlZEVuY29kZWRMZW5ndGhzLmluY2x1ZGVzKGRlY29kZWQubGVuZ3RoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRlY29kZWQgYWRkcmVzcyBsZW5ndGgnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbaXNWYWxpZCwgZW5kUG9zLCBzczU4TGVuZ3RoLCBzczU4RGVjb2RlZF0gPSBjaGVja0FkZHJlc3NDaGVja3N1bShkZWNvZGVkKTtcbiAgICAgICAgaWYgKCFpc1ZhbGlkICYmICFpZ25vcmVDaGVja3N1bSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRlY29kZWQgYWRkcmVzcyBjaGVja3N1bScpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNzNThGb3JtYXQgIT09IC0xICYmIHNzNThGb3JtYXQgIT09IHNzNThEZWNvZGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIHNzNThGb3JtYXQgJHtzczU4Rm9ybWF0fSwgcmVjZWl2ZWQgJHtzczU4RGVjb2RlZH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVjb2RlZC5zbGljZShzczU4TGVuZ3RoLCBlbmRQb3MpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEZWNvZGluZyAke2VuY29kZWR9OiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/address/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/address/defaults.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/defaults.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaults: () => (/* binding */ defaults)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/@polkadot/networks/interfaces.js\");\n\nconst defaults = {\n    allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n    // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n    allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n    allowedPrefix: _networks_js__WEBPACK_IMPORTED_MODULE_0__.availableNetworks.map(({ prefix }) => prefix),\n    prefix: 42\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZGVmYXVsdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDNUM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMkRBQWlCLFFBQVEsUUFBUTtBQUNwRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9kZWZhdWx0cy5qcz8xZmE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF2YWlsYWJsZU5ldHdvcmtzIH0gZnJvbSAnLi4vbmV0d29ya3MuanMnO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRzID0ge1xuICAgIGFsbG93ZWREZWNvZGVkTGVuZ3RoczogWzEsIDIsIDQsIDgsIDMyLCAzM10sXG4gICAgLy8gcHVibGljS2V5IGhhcyBwcmVmaXggKyAyIGNoZWNrc3VtIGJ5dGVzLCBzaG9ydCBvbmx5IHByZWZpeCArIDEgY2hlY2tzdW0gYnl0ZVxuICAgIGFsbG93ZWRFbmNvZGVkTGVuZ3RoczogWzMsIDQsIDYsIDEwLCAzNSwgMzYsIDM3LCAzOF0sXG4gICAgYWxsb3dlZFByZWZpeDogYXZhaWxhYmxlTmV0d29ya3MubWFwKCh7IHByZWZpeCB9KSA9PiBwcmVmaXgpLFxuICAgIHByZWZpeDogNDJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/address/defaults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/address/encode.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/encode.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAddress: () => (/* binding */ encodeAddress)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base58/index.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/base58/bs58.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/decode.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaults.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/defaults.js\");\n/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sshash.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/address/sshash.js\");\n\n\n\n\n\nfunction encodeAddress(key, ss58Format = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.prefix) {\n    // decode it, this means we can re-encode an address\n    const u8a = (0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(key);\n    if ((ss58Format < 0) || (ss58Format > 16383) || [46, 47].includes(ss58Format)) {\n        throw new Error('Out of range ss58Format specified');\n    }\n    else if (!_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.includes(u8a.length)) {\n        throw new Error(`Expected a valid key to convert, with length ${_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.join(', ')}`);\n    }\n    const input = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(ss58Format < 64\n        ? [ss58Format]\n        : [\n            ((ss58Format & 252) >> 2) | 64,\n            (ss58Format >> 8) | ((ss58Format & 3) << 6)\n        ], u8a);\n    return (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_3__.base58Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(input, (0,_sshash_js__WEBPACK_IMPORTED_MODULE_4__.sshash)(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3MvZW5jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNPO0FBQ047QUFDSDtBQUNKO0FBQzlCLHlDQUF5QyxrREFBUTtBQUN4RDtBQUNBLGdCQUFnQix5REFBYTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtEQUFRO0FBQ3RCLHdFQUF3RSxrREFBUSxrQ0FBa0M7QUFDbEg7QUFDQSxrQkFBa0IseURBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOERBQVksQ0FBQyx5REFBUyxRQUFRLGtEQUFNO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vYWRkcmVzcy9lbmNvZGUuanM/YmIzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFDb25jYXQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBiYXNlNThFbmNvZGUgfSBmcm9tICcuLi9iYXNlNTgvaW5kZXguanMnO1xuaW1wb3J0IHsgZGVjb2RlQWRkcmVzcyB9IGZyb20gJy4vZGVjb2RlLmpzJztcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSAnLi9kZWZhdWx0cy5qcyc7XG5pbXBvcnQgeyBzc2hhc2ggfSBmcm9tICcuL3NzaGFzaC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQWRkcmVzcyhrZXksIHNzNThGb3JtYXQgPSBkZWZhdWx0cy5wcmVmaXgpIHtcbiAgICAvLyBkZWNvZGUgaXQsIHRoaXMgbWVhbnMgd2UgY2FuIHJlLWVuY29kZSBhbiBhZGRyZXNzXG4gICAgY29uc3QgdThhID0gZGVjb2RlQWRkcmVzcyhrZXkpO1xuICAgIGlmICgoc3M1OEZvcm1hdCA8IDApIHx8IChzczU4Rm9ybWF0ID4gMTYzODMpIHx8IFs0NiwgNDddLmluY2x1ZGVzKHNzNThGb3JtYXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignT3V0IG9mIHJhbmdlIHNzNThGb3JtYXQgc3BlY2lmaWVkJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFkZWZhdWx0cy5hbGxvd2VkRGVjb2RlZExlbmd0aHMuaW5jbHVkZXModThhLmxlbmd0aCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBhIHZhbGlkIGtleSB0byBjb252ZXJ0LCB3aXRoIGxlbmd0aCAke2RlZmF1bHRzLmFsbG93ZWREZWNvZGVkTGVuZ3Rocy5qb2luKCcsICcpfWApO1xuICAgIH1cbiAgICBjb25zdCBpbnB1dCA9IHU4YUNvbmNhdChzczU4Rm9ybWF0IDwgNjRcbiAgICAgICAgPyBbc3M1OEZvcm1hdF1cbiAgICAgICAgOiBbXG4gICAgICAgICAgICAoKHNzNThGb3JtYXQgJiAyNTIpID4+IDIpIHwgNjQsXG4gICAgICAgICAgICAoc3M1OEZvcm1hdCA+PiA4KSB8ICgoc3M1OEZvcm1hdCAmIDMpIDw8IDYpXG4gICAgICAgIF0sIHU4YSk7XG4gICAgcmV0dXJuIGJhc2U1OEVuY29kZSh1OGFDb25jYXQoaW5wdXQsIHNzaGFzaChpbnB1dCkuc3ViYXJyYXkoMCwgWzMyLCAzM10uaW5jbHVkZXModThhLmxlbmd0aCkgPyAyIDogMSkpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/address/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/address/sshash.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/address/sshash.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sshash: () => (/* binding */ sshash)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../blake2/asU8a.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\");\n\n\nconst SS58_PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('SS58PRE');\nfunction sshash(key) {\n    return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(SS58_PREFIX, key), 512);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2FkZHJlc3Mvc3NoYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0Q7QUFDUDtBQUNqRCxvQkFBb0IsMkRBQVc7QUFDeEI7QUFDUCxXQUFXLDZEQUFXLENBQUMseURBQVM7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsLWNyeXB0by9hZGRyZXNzL3NzaGFzaC5qcz85ZmI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cmluZ1RvVThhLCB1OGFDb25jYXQgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBibGFrZTJBc1U4YSB9IGZyb20gJy4uL2JsYWtlMi9hc1U4YS5qcyc7XG5jb25zdCBTUzU4X1BSRUZJWCA9IHN0cmluZ1RvVThhKCdTUzU4UFJFJyk7XG5leHBvcnQgZnVuY3Rpb24gc3NoYXNoKGtleSkge1xuICAgIHJldHVybiBibGFrZTJBc1U4YSh1OGFDb25jYXQoU1M1OF9QUkVGSVgsIGtleSksIDUxMik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/address/sshash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/base32/helpers.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base32/helpers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDecode: () => (/* binding */ createDecode),\n/* harmony export */   createEncode: () => (/* binding */ createEncode),\n/* harmony export */   createIs: () => (/* binding */ createIs),\n/* harmony export */   createValidate: () => (/* binding */ createValidate)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/** @internal */\nfunction createDecode({ coder, ipfs }, validate) {\n    return (value, ipfsCompat) => {\n        validate(value, ipfsCompat);\n        return coder.decode(ipfs && ipfsCompat\n            ? value.substring(1)\n            : value);\n    };\n}\n/** @internal */\nfunction createEncode({ coder, ipfs }) {\n    return (value, ipfsCompat) => {\n        const out = coder.encode((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value));\n        return ipfs && ipfsCompat\n            ? `${ipfs}${out}`\n            : out;\n    };\n}\n/** @internal */\nfunction createIs(validate) {\n    return (value, ipfsCompat) => {\n        try {\n            return validate(value, ipfsCompat);\n        }\n        catch {\n            return false;\n        }\n    };\n}\n/** @internal */\nfunction createValidate({ chars, ipfs, type, withPadding }) {\n    return (value, ipfsCompat) => {\n        if (typeof value !== 'string') {\n            throw new Error(`Expected ${type} string input`);\n        }\n        else if (ipfs && ipfsCompat && !value.startsWith(ipfs)) {\n            throw new Error(`Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n        }\n        for (let i = (ipfsCompat ? 1 : 0), count = value.length; i < count; i++) {\n            if (chars.includes(value[i])) {\n                // all ok, character found\n            }\n            else if (withPadding && value[i] === '=') {\n                if (i === count - 1) {\n                    // last character, everything ok\n                }\n                else if (value[i + 1] === '=') {\n                    // next one is also padding, sequence ok\n                }\n                else {\n                    throw new Error(`Invalid ${type} padding sequence \"${value[i]}${value[i + 1]}\" at index ${i}`);\n                }\n            }\n            else {\n                throw new Error(`Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n            }\n        }\n        return true;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2Jhc2UzMi9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBDO0FBQzFDO0FBQ08sd0JBQXdCLGFBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3QixhQUFhO0FBQzVDO0FBQ0EsaUNBQWlDLHdEQUFRO0FBQ3pDO0FBQ0EsaUJBQWlCLEtBQUssRUFBRSxJQUFJO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQixnQ0FBZ0M7QUFDakU7QUFDQTtBQUNBLHdDQUF3QyxNQUFNO0FBQzlDO0FBQ0E7QUFDQSx3REFBd0QsTUFBTSxpQkFBaUIsS0FBSztBQUNwRjtBQUNBLGlFQUFpRSxXQUFXO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsTUFBTSxvQkFBb0IsU0FBUyxFQUFFLGFBQWEsYUFBYSxFQUFFO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxNQUFNLGFBQWEsU0FBUyxPQUFPLGlDQUFpQyxhQUFhLEVBQUU7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2Jhc2UzMi9oZWxwZXJzLmpzPzA0NmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVjb2RlKHsgY29kZXIsIGlwZnMgfSwgdmFsaWRhdGUpIHtcbiAgICByZXR1cm4gKHZhbHVlLCBpcGZzQ29tcGF0KSA9PiB7XG4gICAgICAgIHZhbGlkYXRlKHZhbHVlLCBpcGZzQ29tcGF0KTtcbiAgICAgICAgcmV0dXJuIGNvZGVyLmRlY29kZShpcGZzICYmIGlwZnNDb21wYXRcbiAgICAgICAgICAgID8gdmFsdWUuc3Vic3RyaW5nKDEpXG4gICAgICAgICAgICA6IHZhbHVlKTtcbiAgICB9O1xufVxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVuY29kZSh7IGNvZGVyLCBpcGZzIH0pIHtcbiAgICByZXR1cm4gKHZhbHVlLCBpcGZzQ29tcGF0KSA9PiB7XG4gICAgICAgIGNvbnN0IG91dCA9IGNvZGVyLmVuY29kZSh1OGFUb1U4YSh2YWx1ZSkpO1xuICAgICAgICByZXR1cm4gaXBmcyAmJiBpcGZzQ29tcGF0XG4gICAgICAgICAgICA/IGAke2lwZnN9JHtvdXR9YFxuICAgICAgICAgICAgOiBvdXQ7XG4gICAgfTtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJcyh2YWxpZGF0ZSkge1xuICAgIHJldHVybiAodmFsdWUsIGlwZnNDb21wYXQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZSh2YWx1ZSwgaXBmc0NvbXBhdCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVWYWxpZGF0ZSh7IGNoYXJzLCBpcGZzLCB0eXBlLCB3aXRoUGFkZGluZyB9KSB7XG4gICAgcmV0dXJuICh2YWx1ZSwgaXBmc0NvbXBhdCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCAke3R5cGV9IHN0cmluZyBpbnB1dGApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlwZnMgJiYgaXBmc0NvbXBhdCAmJiAhdmFsdWUuc3RhcnRzV2l0aChpcGZzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBpcGZzLWNvbXBhdGlibGUgJHt0eXBlfSB0byBzdGFydCB3aXRoICcke2lwZnN9J2ApO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAoaXBmc0NvbXBhdCA/IDEgOiAwKSwgY291bnQgPSB2YWx1ZS5sZW5ndGg7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoY2hhcnMuaW5jbHVkZXModmFsdWVbaV0pKSB7XG4gICAgICAgICAgICAgICAgLy8gYWxsIG9rLCBjaGFyYWN0ZXIgZm91bmRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHdpdGhQYWRkaW5nICYmIHZhbHVlW2ldID09PSAnPScpIHtcbiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gY291bnQgLSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGxhc3QgY2hhcmFjdGVyLCBldmVyeXRoaW5nIG9rXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlW2kgKyAxXSA9PT0gJz0nKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIG5leHQgb25lIGlzIGFsc28gcGFkZGluZywgc2VxdWVuY2Ugb2tcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCAke3R5cGV9IHBhZGRpbmcgc2VxdWVuY2UgXCIke3ZhbHVlW2ldfSR7dmFsdWVbaSArIDFdfVwiIGF0IGluZGV4ICR7aX1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgJHt0eXBlfSBjaGFyYWN0ZXIgXCIke3ZhbHVlW2ldfVwiICgweCR7dmFsdWUuY2hhckNvZGVBdChpKS50b1N0cmluZygxNil9KSBhdCBpbmRleCAke2l9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/base32/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/base58/bs58.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/base58/bs58.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58Decode: () => (/* binding */ base58Decode),\n/* harmony export */   base58Encode: () => (/* binding */ base58Encode),\n/* harmony export */   base58Validate: () => (/* binding */ base58Validate),\n/* harmony export */   isBase58: () => (/* binding */ isBase58)\n/* harmony export */ });\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scure/base */ \"(ssr)/./node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base32/helpers.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/base32/helpers.js\");\n\n\nconst config = {\n    chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n    coder: _scure_base__WEBPACK_IMPORTED_MODULE_0__.base58,\n    ipfs: 'z',\n    type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\nconst base58Validate = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\nconst base58Decode = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\nconst base58Encode = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\nconst isBase58 = /*#__PURE__*/ (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base58Validate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2Jhc2U1OC9iczU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQUN1RDtBQUM1RjtBQUNBO0FBQ0EsV0FBVywrQ0FBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQ0FBcUMsa0VBQWM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLGdFQUFZO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1DQUFtQyxnRUFBWTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNPLCtCQUErQiw0REFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2Jhc2U1OC9iczU4LmpzPzViYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZTU4IH0gZnJvbSAnQHNjdXJlL2Jhc2UnO1xuaW1wb3J0IHsgY3JlYXRlRGVjb2RlLCBjcmVhdGVFbmNvZGUsIGNyZWF0ZUlzLCBjcmVhdGVWYWxpZGF0ZSB9IGZyb20gJy4uL2Jhc2UzMi9oZWxwZXJzLmpzJztcbmNvbnN0IGNvbmZpZyA9IHtcbiAgICBjaGFyczogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonLFxuICAgIGNvZGVyOiBiYXNlNTgsXG4gICAgaXBmczogJ3onLFxuICAgIHR5cGU6ICdiYXNlNTgnXG59O1xuLyoqXG4gKiBAbmFtZSBiYXNlNThWYWxpZGF0ZVxuICogQHN1bW1hcnkgVmFsaWRhdGVzIGEgYmFzZTU4IHZhbHVlLlxuICogQGRlc2NyaXB0aW9uXG4gKiBWYWxpZGF0ZXMgdGhhdCB0aGUgc3VwcGxpZWQgdmFsdWUgaXMgdmFsaWQgYmFzZTU4LCB0aHJvd2luZyBleGNlcHRpb25zIGlmIG5vdFxuICovXG5leHBvcnQgY29uc3QgYmFzZTU4VmFsaWRhdGUgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZVZhbGlkYXRlKGNvbmZpZyk7XG4vKipcbiAqIEBuYW1lIGJhc2U1OERlY29kZVxuICogQHN1bW1hcnkgRGVjb2RlcyBhIGJhc2U1OCB2YWx1ZS5cbiAqIEBkZXNjcmlwdGlvblxuICogRnJvbSB0aGUgcHJvdmlkZWQgaW5wdXQsIGRlY29kZSB0aGUgYmFzZTU4IGFuZCByZXR1cm4gdGhlIHJlc3VsdCBhcyBhbiBgVWludDhBcnJheWAuXG4gKi9cbmV4cG9ydCBjb25zdCBiYXNlNThEZWNvZGUgPSAvKiNfX1BVUkVfXyovIGNyZWF0ZURlY29kZShjb25maWcsIGJhc2U1OFZhbGlkYXRlKTtcbi8qKlxuKiBAbmFtZSBiYXNlNThFbmNvZGVcbiogQHN1bW1hcnkgQ3JlYXRlcyBhIGJhc2U1OCB2YWx1ZS5cbiogQGRlc2NyaXB0aW9uXG4qIEZyb20gdGhlIHByb3ZpZGVkIGlucHV0LCBjcmVhdGUgdGhlIGJhc2U1OCBhbmQgcmV0dXJuIHRoZSByZXN1bHQgYXMgYSBzdHJpbmcuXG4qL1xuZXhwb3J0IGNvbnN0IGJhc2U1OEVuY29kZSA9IC8qI19fUFVSRV9fKi8gY3JlYXRlRW5jb2RlKGNvbmZpZyk7XG4vKipcbiogQG5hbWUgaXNCYXNlNThcbiogQGRlc2NyaXB0aW9uIENoZWNrcyBpZiB0aGUgaW5wdXQgaXMgaW4gYmFzZTU4LCByZXR1cm5pbmcgdHJ1ZS9mYWxzZVxuKi9cbmV4cG9ydCBjb25zdCBpc0Jhc2U1OCA9IC8qI19fUFVSRV9fKi8gY3JlYXRlSXMoYmFzZTU4VmFsaWRhdGUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/base58/bs58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js":
/*!************************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/blake2/asU8a.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blake2AsHex: () => (/* binding */ blake2AsHex),\n/* harmony export */   blake2AsU8a: () => (/* binding */ blake2AsU8a)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/blake2b */ \"(ssr)/./node_modules/@noble/hashes/esm/blake2b.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(ssr)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"(ssr)/./node_modules/@polkadot/util-crypto/helpers.js\");\n\n\n\n\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nfunction blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n    const byteLength = Math.ceil(bitLength / 8);\n    const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);\n    return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || (!onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)())\n        ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.blake2b)(u8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(key), byteLength)\n        : key\n            ? (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, { dkLen: byteLength, key })\n            : (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, { dkLen: byteLength });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\nconst blake2AsHex = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(blake2AsU8a);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2JsYWtlMi9hc1U4YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTZEO0FBQ1I7QUFDSTtBQUNiO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQix3REFBUTtBQUN4QixZQUFZLHFEQUFTLGdCQUFnQiw4REFBTztBQUM1QyxVQUFVLDhEQUFPLE1BQU0sd0RBQVE7QUFDL0I7QUFDQSxjQUFjLDhEQUFTLFFBQVEsd0JBQXdCO0FBQ3ZELGNBQWMsOERBQVMsUUFBUSxtQkFBbUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQyx3REFBVyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2JsYWtlMi9hc1U4YS5qcz9iMjUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJsYWtlMmIgYXMgYmxha2UyYkpzIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9ibGFrZTJiJztcbmltcG9ydCB7IGhhc0JpZ0ludCwgdThhVG9VOGEgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG5pbXBvcnQgeyBibGFrZTJiLCBpc1JlYWR5IH0gZnJvbSAnQHBvbGthZG90L3dhc20tY3J5cHRvJztcbmltcG9ydCB7IGNyZWF0ZUFzSGV4IH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG4vKipcbiAqIEBuYW1lIGJsYWtlMkFzVThhXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgYmxha2UyYiB1OGEgZnJvbSB0aGUgaW5wdXQuXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZyb20gYSBgVWludDhBcnJheWAgaW5wdXQsIGNyZWF0ZSB0aGUgYmxha2UyYiBhbmQgcmV0dXJuIHRoZSByZXN1bHQgYXMgYSB1OGEgd2l0aCB0aGUgc3BlY2lmaWVkIGBiaXRMZW5ndGhgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBibGFrZTJBc1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsLWNyeXB0byc7XG4gKlxuICogYmxha2UyQXNVOGEoJ2FiYycpOyAvLyA9PiBbMHhiYSwgMHg4MCwgMHhhNSwgMHgzZiwgMHg5OCwgMHgxYywgMHg0ZCwgMHgwZF1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gYmxha2UyQXNVOGEoZGF0YSwgYml0TGVuZ3RoID0gMjU2LCBrZXksIG9ubHlKcykge1xuICAgIGNvbnN0IGJ5dGVMZW5ndGggPSBNYXRoLmNlaWwoYml0TGVuZ3RoIC8gOCk7XG4gICAgY29uc3QgdThhID0gdThhVG9VOGEoZGF0YSk7XG4gICAgcmV0dXJuICFoYXNCaWdJbnQgfHwgKCFvbmx5SnMgJiYgaXNSZWFkeSgpKVxuICAgICAgICA/IGJsYWtlMmIodThhLCB1OGFUb1U4YShrZXkpLCBieXRlTGVuZ3RoKVxuICAgICAgICA6IGtleVxuICAgICAgICAgICAgPyBibGFrZTJiSnModThhLCB7IGRrTGVuOiBieXRlTGVuZ3RoLCBrZXkgfSlcbiAgICAgICAgICAgIDogYmxha2UyYkpzKHU4YSwgeyBka0xlbjogYnl0ZUxlbmd0aCB9KTtcbn1cbi8qKlxuICogQG5hbWUgYmxha2UyQXNIZXhcbiAqIEBkZXNjcmlwdGlvbiBDcmVhdGVzIGEgYmxha2UyYiBoZXggZnJvbSB0aGUgaW5wdXQuXG4gKi9cbmV4cG9ydCBjb25zdCBibGFrZTJBc0hleCA9IC8qI19fUFVSRV9fKi8gY3JlYXRlQXNIZXgoYmxha2UyQXNVOGEpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/blake2/asU8a.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util-crypto/helpers.js":
/*!*******************************************************!*\
  !*** ./node_modules/@polkadot/util-crypto/helpers.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsHex: () => (/* binding */ createAsHex),\n/* harmony export */   createBitHasher: () => (/* binding */ createBitHasher),\n/* harmony export */   createDualHasher: () => (/* binding */ createDualHasher)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/toHex.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/wasm-crypto */ \"(ssr)/./node_modules/@polkadot/wasm-crypto/bundle.js\");\n\n\n/** @internal */\nfunction createAsHex(fn) {\n    return (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(fn(...args));\n}\n/** @internal */\nfunction createBitHasher(bitLength, fn) {\n    return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\n/** @internal */\nfunction createDualHasher(wa, js) {\n    return (value, bitLength = 256, onlyJs) => {\n        const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value);\n        return !_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hasBigInt || (!onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)())\n            ? wa[bitLength](u8a)\n            : js[bitLength](u8a);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwtY3J5cHRvL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErRDtBQUNmO0FBQ2hEO0FBQ087QUFDUCx3QkFBd0Isd0RBQVE7QUFDaEM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQix3REFBUTtBQUM1QixnQkFBZ0IscURBQVMsZ0JBQWdCLDhEQUFPO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC1jcnlwdG8vaGVscGVycy5qcz8xNTRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc0JpZ0ludCwgdThhVG9IZXgsIHU4YVRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgaXNSZWFkeSB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0byc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXNIZXgoZm4pIHtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHU4YVRvSGV4KGZuKC4uLmFyZ3MpKTtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaXRIYXNoZXIoYml0TGVuZ3RoLCBmbikge1xuICAgIHJldHVybiAoZGF0YSwgb25seUpzKSA9PiBmbihkYXRhLCBiaXRMZW5ndGgsIG9ubHlKcyk7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRHVhbEhhc2hlcih3YSwganMpIHtcbiAgICByZXR1cm4gKHZhbHVlLCBiaXRMZW5ndGggPSAyNTYsIG9ubHlKcykgPT4ge1xuICAgICAgICBjb25zdCB1OGEgPSB1OGFUb1U4YSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiAhaGFzQmlnSW50IHx8ICghb25seUpzICYmIGlzUmVhZHkoKSlcbiAgICAgICAgICAgID8gd2FbYml0TGVuZ3RoXSh1OGEpXG4gICAgICAgICAgICA6IGpzW2JpdExlbmd0aF0odThhKTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util-crypto/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/has.js":
/*!********************************************!*\
  !*** ./node_modules/@polkadot/util/has.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBigInt: () => (/* binding */ hasBigInt),\n/* harmony export */   hasBuffer: () => (/* binding */ hasBuffer),\n/* harmony export */   hasCjs: () => (/* binding */ hasCjs),\n/* harmony export */   hasDirname: () => (/* binding */ hasDirname),\n/* harmony export */   hasEsm: () => (/* binding */ hasEsm),\n/* harmony export */   hasProcess: () => (/* binding */ hasProcess),\n/* harmony export */   hasWasm: () => (/* binding */ hasWasm)\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-bigint */ \"(ssr)/./node_modules/@polkadot/x-bigint/index.js\");\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(ssr)/./node_modules/@polkadot/x-global/index.js\");\n\n\n/** true if the environment has proper BigInt support */\nconst hasBigInt = typeof _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt === 'function' && typeof _polkadot_x_bigint__WEBPACK_IMPORTED_MODULE_0__.BigInt.asIntN === 'function';\n/** true if the environment is CJS */\nconst hasCjs = typeof require === 'function' && typeof module !== 'undefined';\n/** true if the environment has __dirname available */\nconst hasDirname = typeof __dirname !== 'undefined';\n/** true if the environment is ESM */\nconst hasEsm = !hasCjs;\n/** true if the environment has WebAssembly available */\nconst hasWasm = typeof WebAssembly !== 'undefined';\n/** true if the environment has support for Buffer (typically Node.js) */\nconst hasBuffer = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.Buffer === 'function' && typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.Buffer.isBuffer === 'function';\n/** true if the environment has process available (typically Node.js) */\nconst hasProcess = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.process === 'object';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaGFzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE0QztBQUNDO0FBQzdDO0FBQ08seUJBQXlCLHNEQUFNLDBCQUEwQixzREFBTTtBQUN0RTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTyx5QkFBeUIsdURBQU8saUNBQWlDLHVEQUFPO0FBQy9FO0FBQ08sMEJBQTBCLHVEQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oYXMuanM/YzRiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWdJbnQgfSBmcm9tICdAcG9sa2Fkb3QveC1iaWdpbnQnO1xuaW1wb3J0IHsgeGdsb2JhbCB9IGZyb20gJ0Bwb2xrYWRvdC94LWdsb2JhbCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaGFzIHByb3BlciBCaWdJbnQgc3VwcG9ydCAqL1xuZXhwb3J0IGNvbnN0IGhhc0JpZ0ludCA9IHR5cGVvZiBCaWdJbnQgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIEJpZ0ludC5hc0ludE4gPT09ICdmdW5jdGlvbic7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaXMgQ0pTICovXG5leHBvcnQgY29uc3QgaGFzQ2pzID0gdHlwZW9mIHJlcXVpcmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaGFzIF9fZGlybmFtZSBhdmFpbGFibGUgKi9cbmV4cG9ydCBjb25zdCBoYXNEaXJuYW1lID0gdHlwZW9mIF9fZGlybmFtZSAhPT0gJ3VuZGVmaW5lZCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaXMgRVNNICovXG5leHBvcnQgY29uc3QgaGFzRXNtID0gIWhhc0Nqcztcbi8qKiB0cnVlIGlmIHRoZSBlbnZpcm9ubWVudCBoYXMgV2ViQXNzZW1ibHkgYXZhaWxhYmxlICovXG5leHBvcnQgY29uc3QgaGFzV2FzbSA9IHR5cGVvZiBXZWJBc3NlbWJseSAhPT0gJ3VuZGVmaW5lZCc7XG4vKiogdHJ1ZSBpZiB0aGUgZW52aXJvbm1lbnQgaGFzIHN1cHBvcnQgZm9yIEJ1ZmZlciAodHlwaWNhbGx5IE5vZGUuanMpICovXG5leHBvcnQgY29uc3QgaGFzQnVmZmVyID0gdHlwZW9mIHhnbG9iYWwuQnVmZmVyID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB4Z2xvYmFsLkJ1ZmZlci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJztcbi8qKiB0cnVlIGlmIHRoZSBlbnZpcm9ubWVudCBoYXMgcHJvY2VzcyBhdmFpbGFibGUgKHR5cGljYWxseSBOb2RlLmpzKSAqL1xuZXhwb3J0IGNvbnN0IGhhc1Byb2Nlc3MgPSB0eXBlb2YgeGdsb2JhbC5wcm9jZXNzID09PSAnb2JqZWN0JztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/has.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/hex/toU8a.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/hex/toU8a.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hexToU8a: () => (/* binding */ hexToU8a)\n/* harmony export */ });\nconst CHR = '0123456789abcdef';\nconst U8 = new Uint8Array(256);\nconst U16 = new Uint8Array(256 * 256);\nfor (let i = 0, count = CHR.length; i < count; i++) {\n    U8[CHR[i].charCodeAt(0) | 0] = i | 0;\n    if (i > 9) {\n        U8[CHR[i].toUpperCase().charCodeAt(0) | 0] = i | 0;\n    }\n}\nfor (let i = 0; i < 256; i++) {\n    const s = i << 8;\n    for (let j = 0; j < 256; j++) {\n        U16[s | j] = (U8[i] << 4) | U8[j];\n    }\n}\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\nfunction hexToU8a(value, bitLength = -1) {\n    if (!value) {\n        return new Uint8Array();\n    }\n    let s = value.startsWith('0x')\n        ? 2\n        : 0;\n    const decLength = Math.ceil((value.length - s) / 2);\n    const endLength = Math.ceil(bitLength === -1\n        ? decLength\n        : bitLength / 8);\n    const result = new Uint8Array(endLength);\n    const offset = endLength > decLength\n        ? endLength - decLength\n        : 0;\n    for (let i = offset; i < endLength; i++, s += 2) {\n        // The big factor here is actually the string lookups. If we do\n        // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the\n        // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is\n        // also the faster operation by at least 2x with the character map above\n        result[i] = U16[(value.charCodeAt(s) << 8) | value.charCodeAt(s + 1)];\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaGV4L3RvVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsV0FBVztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQSx5QkFBeUI7QUFDekIsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZUFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9oZXgvdG9VOGEuanM/ZDBmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDSFIgPSAnMDEyMzQ1Njc4OWFiY2RlZic7XG5jb25zdCBVOCA9IG5ldyBVaW50OEFycmF5KDI1Nik7XG5jb25zdCBVMTYgPSBuZXcgVWludDhBcnJheSgyNTYgKiAyNTYpO1xuZm9yIChsZXQgaSA9IDAsIGNvdW50ID0gQ0hSLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICBVOFtDSFJbaV0uY2hhckNvZGVBdCgwKSB8IDBdID0gaSB8IDA7XG4gICAgaWYgKGkgPiA5KSB7XG4gICAgICAgIFU4W0NIUltpXS50b1VwcGVyQ2FzZSgpLmNoYXJDb2RlQXQoMCkgfCAwXSA9IGkgfCAwO1xuICAgIH1cbn1cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyBpKyspIHtcbiAgICBjb25zdCBzID0gaSA8PCA4O1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgMjU2OyBqKyspIHtcbiAgICAgICAgVTE2W3MgfCBqXSA9IChVOFtpXSA8PCA0KSB8IFU4W2pdO1xuICAgIH1cbn1cbi8qKlxuICogQG5hbWUgaGV4VG9VOGFcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBVaW50OEFycmF5IG9iamVjdCBmcm9tIGEgaGV4IHN0cmluZy5cbiAqIEBkZXNjcmlwdGlvblxuICogYG51bGxgIGlucHV0cyByZXR1cm5zIGFuIGVtcHR5IGBVaW50OEFycmF5YCByZXN1bHQuIEhleCBpbnB1dCB2YWx1ZXMgcmV0dXJuIHRoZSBhY3R1YWwgYnl0ZXMgdmFsdWUgY29udmVydGVkIHRvIGEgVWludDhBcnJheS4gQW55dGhpbmcgdGhhdCBpcyBub3QgYSBoZXggc3RyaW5nIChpbmNsdWRpbmcgdGhlIGAweGAgcHJlZml4KSB0aHJvd3MgYW4gZXJyb3IuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGhleFRvVThhIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGhleFRvVThhKCcweDgwMDAxZicpOyAvLyBVaW50OEFycmF5KFsweDgwLCAweDAwLCAweDFmXSlcbiAqIGhleFRvVThhKCcweDgwMDAxZicsIDMyKTsgLy8gVWludDhBcnJheShbMHgwMCwgMHg4MCwgMHgwMCwgMHgxZl0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFRvVThhKHZhbHVlLCBiaXRMZW5ndGggPSAtMSkge1xuICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KCk7XG4gICAgfVxuICAgIGxldCBzID0gdmFsdWUuc3RhcnRzV2l0aCgnMHgnKVxuICAgICAgICA/IDJcbiAgICAgICAgOiAwO1xuICAgIGNvbnN0IGRlY0xlbmd0aCA9IE1hdGguY2VpbCgodmFsdWUubGVuZ3RoIC0gcykgLyAyKTtcbiAgICBjb25zdCBlbmRMZW5ndGggPSBNYXRoLmNlaWwoYml0TGVuZ3RoID09PSAtMVxuICAgICAgICA/IGRlY0xlbmd0aFxuICAgICAgICA6IGJpdExlbmd0aCAvIDgpO1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGVuZExlbmd0aCk7XG4gICAgY29uc3Qgb2Zmc2V0ID0gZW5kTGVuZ3RoID4gZGVjTGVuZ3RoXG4gICAgICAgID8gZW5kTGVuZ3RoIC0gZGVjTGVuZ3RoXG4gICAgICAgIDogMDtcbiAgICBmb3IgKGxldCBpID0gb2Zmc2V0OyBpIDwgZW5kTGVuZ3RoOyBpKyssIHMgKz0gMikge1xuICAgICAgICAvLyBUaGUgYmlnIGZhY3RvciBoZXJlIGlzIGFjdHVhbGx5IHRoZSBzdHJpbmcgbG9va3Vwcy4gSWYgd2UgZG9cbiAgICAgICAgLy8gSEVYX1RPX1UxNlt2YWx1ZS5zdWJzdHJpbmcoKV0gd2UgZ2V0IGFuIDEweCBzbG93ZG93bi4gSW4gdGhlXG4gICAgICAgIC8vIHNhbWUgdmVpbiB1c2luZyBjaGFyQ29kZUF0IChhcyBvcHBvc2VkIHRvIHZhbHVlW3NdIG9yIHZhbHVlLmNoYXJBdChzKSkgaXNcbiAgICAgICAgLy8gYWxzbyB0aGUgZmFzdGVyIG9wZXJhdGlvbiBieSBhdCBsZWFzdCAyeCB3aXRoIHRoZSBjaGFyYWN0ZXIgbWFwIGFib3ZlXG4gICAgICAgIHJlc3VsdFtpXSA9IFUxNlsodmFsdWUuY2hhckNvZGVBdChzKSA8PCA4KSB8IHZhbHVlLmNoYXJDb2RlQXQocyArIDEpXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/hex/toU8a.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/buffer.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/buffer.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBuffer: () => (/* binding */ isBuffer)\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/x-global */ \"(ssr)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../has.js */ \"(ssr)/./node_modules/@polkadot/util/has.js\");\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/@polkadot/util/is/function.js\");\n\n\n\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\nfunction isBuffer(value) {\n    // we do check a function first, since it is slightly faster than isBuffer itself\n    return _has_js__WEBPACK_IMPORTED_MODULE_0__.hasBuffer && !!value && (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.readDoubleLE) && _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__.xglobal.Buffer.isBuffer(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvYnVmZmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFDUDtBQUNLO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ087QUFDUDtBQUNBLFdBQVcsOENBQVMsZUFBZSx3REFBVSx3QkFBd0IsdURBQU87QUFDNUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2lzL2J1ZmZlci5qcz8xY2Y0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHhnbG9iYWwgfSBmcm9tICdAcG9sa2Fkb3QveC1nbG9iYWwnO1xuaW1wb3J0IHsgaGFzQnVmZmVyIH0gZnJvbSAnLi4vaGFzLmpzJztcbmltcG9ydCB7IGlzRnVuY3Rpb24gfSBmcm9tICcuL2Z1bmN0aW9uLmpzJztcbi8qKlxuICogQG5hbWUgaXNCdWZmZXJcbiAqIEBzdW1tYXJ5IFRlc3RzIGZvciBhIGBCdWZmZXJgIG9iamVjdCBpbnN0YW5jZS5cbiAqIEBkZXNjcmlwdGlvblxuICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaW5wdXQgb2JqZWN0IGlzIGFuIGluc3RhbmNlIG9mIGBCdWZmZXJgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBpc0J1ZmZlciB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBjb25zb2xlLmxvZygnaXNCdWZmZXInLCBpc0J1ZmZlcihCdWZmZXIuZnJvbShbXSkpKTsgLy8gPT4gdHJ1ZVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0J1ZmZlcih2YWx1ZSkge1xuICAgIC8vIHdlIGRvIGNoZWNrIGEgZnVuY3Rpb24gZmlyc3QsIHNpbmNlIGl0IGlzIHNsaWdodGx5IGZhc3RlciB0aGFuIGlzQnVmZmVyIGl0c2VsZlxuICAgIHJldHVybiBoYXNCdWZmZXIgJiYgISF2YWx1ZSAmJiBpc0Z1bmN0aW9uKHZhbHVlLnJlYWREb3VibGVMRSkgJiYgeGdsb2JhbC5CdWZmZXIuaXNCdWZmZXIodmFsdWUpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/function.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/util/is/function.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isFunction: () => (/* binding */ isFunction)\n/* harmony export */ });\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvZnVuY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksYUFBYTtBQUN6QjtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9mdW5jdGlvbi5qcz83Mzc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG5hbWUgaXNGdW5jdGlvblxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgYGZ1bmN0aW9uYC5cbiAqIEBkZXNjcmlwdGlvblxuICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgYSBKYXZhU2NyaXB0IGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGlzRnVuY3Rpb24oKCkgPT4gZmFsc2UpOyAvLyA9PiB0cnVlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/function.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/helpers.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/util/is/helpers.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOn: () => (/* binding */ isOn),\n/* harmony export */   isOnFunction: () => (/* binding */ isOnFunction),\n/* harmony export */   isOnObject: () => (/* binding */ isOnObject)\n/* harmony export */ });\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./function.js */ \"(ssr)/./node_modules/@polkadot/util/is/function.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(ssr)/./node_modules/@polkadot/util/is/object.js\");\n\n\nfunction isOn(...fns) {\n    return (value) => ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) || (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value)) &&\n        fns.every((f) => (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value[f]));\n}\nfunction isOnFunction(...fns) {\n    return (value) => (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value) &&\n        fns.every((f) => (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value[f]));\n}\nfunction isOnObject(...fns) {\n    return (value) => (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) &&\n        fns.every((f) => (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value[f]));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQztBQUNKO0FBQ2hDO0FBQ1AsdUJBQXVCLG9EQUFRLFdBQVcsd0RBQVU7QUFDcEQseUJBQXlCLHdEQUFVO0FBQ25DO0FBQ087QUFDUCxzQkFBc0Isd0RBQVU7QUFDaEMseUJBQXlCLHdEQUFVO0FBQ25DO0FBQ087QUFDUCxzQkFBc0Isb0RBQVE7QUFDOUIseUJBQXlCLHdEQUFVO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC9pcy9oZWxwZXJzLmpzPzg4MmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNGdW5jdGlvbiB9IGZyb20gJy4vZnVuY3Rpb24uanMnO1xuaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tICcuL29iamVjdC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaXNPbiguLi5mbnMpIHtcbiAgICByZXR1cm4gKHZhbHVlKSA9PiAoaXNPYmplY3QodmFsdWUpIHx8IGlzRnVuY3Rpb24odmFsdWUpKSAmJlxuICAgICAgICBmbnMuZXZlcnkoKGYpID0+IGlzRnVuY3Rpb24odmFsdWVbZl0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09uRnVuY3Rpb24oLi4uZm5zKSB7XG4gICAgcmV0dXJuICh2YWx1ZSkgPT4gaXNGdW5jdGlvbih2YWx1ZSkgJiZcbiAgICAgICAgZm5zLmV2ZXJ5KChmKSA9PiBpc0Z1bmN0aW9uKHZhbHVlW2ZdKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPbk9iamVjdCguLi5mbnMpIHtcbiAgICByZXR1cm4gKHZhbHVlKSA9PiBpc09iamVjdCh2YWx1ZSkgJiZcbiAgICAgICAgZm5zLmV2ZXJ5KChmKSA9PiBpc0Z1bmN0aW9uKHZhbHVlW2ZdKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/hex.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/is/hex.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REGEX_HEX_NOPREFIX: () => (/* binding */ REGEX_HEX_NOPREFIX),\n/* harmony export */   REGEX_HEX_PREFIXED: () => (/* binding */ REGEX_HEX_PREFIXED),\n/* harmony export */   isHex: () => (/* binding */ isHex)\n/* harmony export */ });\nconst REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nconst REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\nfunction isHex(value, bitLength = -1, ignoreLength) {\n    return (typeof value === 'string' && (value === '0x' ||\n        REGEX_HEX_PREFIXED.test(value))) && (bitLength === -1\n        ? (ignoreLength || (value.length % 2 === 0))\n        : (value.length === (2 + Math.ceil(bitLength / 4))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvaGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQSxvQkFBb0I7QUFDcEIsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2lzL2hleC5qcz84NjFlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBSRUdFWF9IRVhfUFJFRklYRUQgPSAvXjB4W1xcZGEtZkEtRl0rJC87XG5leHBvcnQgY29uc3QgUkVHRVhfSEVYX05PUFJFRklYID0gL15bXFxkYS1mQS1GXSskLztcbi8qKlxuICogQG5hbWUgaXNIZXhcbiAqIEBzdW1tYXJ5IFRlc3RzIGZvciBhIGhleCBzdHJpbmcuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGlucHV0IHZhbHVlIGlzIGEgYDB4YCBwcmVmaXhlZCBoZXggc3RyaW5nLiBPcHRpb25hbGx5IChgYml0TGVuZ3RoYCAhPT0gLTEpIGNoZWNrcyB0byBzZWUgaWYgdGhlIGJpdExlbmd0aCBpcyBjb3JyZWN0LlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBpc0hleCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBpc0hleCgnMHgxMjM0Jyk7IC8vID0+IHRydWVcbiAqIGlzSGV4KCcweDEyMzQnLCA4KTsgLy8gPT4gZmFsc2VcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNIZXgodmFsdWUsIGJpdExlbmd0aCA9IC0xLCBpZ25vcmVMZW5ndGgpIHtcbiAgICByZXR1cm4gKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgKHZhbHVlID09PSAnMHgnIHx8XG4gICAgICAgIFJFR0VYX0hFWF9QUkVGSVhFRC50ZXN0KHZhbHVlKSkpICYmIChiaXRMZW5ndGggPT09IC0xXG4gICAgICAgID8gKGlnbm9yZUxlbmd0aCB8fCAodmFsdWUubGVuZ3RoICUgMiA9PT0gMCkpXG4gICAgICAgIDogKHZhbHVlLmxlbmd0aCA9PT0gKDIgKyBNYXRoLmNlaWwoYml0TGVuZ3RoIC8gNCkpKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/hex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/is/object.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nfunction isObject(value) {\n    return !!value && typeof value === 'object';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvb2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDQSxjQUFjLEdBQUc7QUFDakIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2lzL29iamVjdC5qcz80MjA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG5hbWUgaXNPYmplY3RcbiAqIEBzdW1tYXJ5IFRlc3RzIGZvciBhbiBgb2JqZWN0YC5cbiAqIEBkZXNjcmlwdGlvblxuICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgaXNPYmplY3QgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbCc7XG4gKlxuICogaXNPYmplY3Qoe30pOyAvLyA9PiB0cnVlXG4gKiBpc09iamVjdCgnc29tZXRoaW5nJyk7IC8vID0+IGZhbHNlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gICAgcmV0dXJuICEhdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/promise.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/util/is/promise.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPromise: () => (/* binding */ isPromise)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@polkadot/util/is/helpers.js\");\n\nconst isPromise = /*#__PURE__*/ (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isOnObject)('catch', 'then');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvcHJvbWlzZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQyxnQ0FBZ0MsdURBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL2lzL3Byb21pc2UuanM/NzZkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09uT2JqZWN0IH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBjb25zdCBpc1Byb21pc2UgPSAvKiNfX1BVUkVfXyovIGlzT25PYmplY3QoJ2NhdGNoJywgJ3RoZW4nKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/is/u8a.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/is/u8a.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isU8a: () => (/* binding */ isU8a)\n/* harmony export */ });\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nfunction isU8a(value) {\n    // here we defer the instanceof check which is actually slightly\n    // slower than just checking the constrctor (direct instances)\n    return (((value && value.constructor) === Uint8Array) ||\n        value instanceof Uint8Array);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvdThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGVBQWU7QUFDM0I7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvaXMvdThhLmpzPzlmMmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZSBpc1U4YVxuICogQHN1bW1hcnkgVGVzdHMgZm9yIGEgYFVpbnQ4QXJyYXlgIG9iamVjdCBpbnN0YW5jZS5cbiAqIEBkZXNjcmlwdGlvblxuICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgaW5wdXQgb2JqZWN0IGlzIGFuIGluc3RhbmNlIG9mIGBVaW50OEFycmF5YC5cbiAqIEBleGFtcGxlXG4gKiA8QlI+XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0IHsgaXNVaW50OEFycmF5IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIGNvbnNvbGUubG9nKCdpc1U4YScsIGlzVThhKFtdKSk7IC8vID0+IGZhbHNlXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVThhKHZhbHVlKSB7XG4gICAgLy8gaGVyZSB3ZSBkZWZlciB0aGUgaW5zdGFuY2VvZiBjaGVjayB3aGljaCBpcyBhY3R1YWxseSBzbGlnaHRseVxuICAgIC8vIHNsb3dlciB0aGFuIGp1c3QgY2hlY2tpbmcgdGhlIGNvbnN0cmN0b3IgKGRpcmVjdCBpbnN0YW5jZXMpXG4gICAgcmV0dXJuICgoKHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yKSA9PT0gVWludDhBcnJheSkgfHxcbiAgICAgICAgdmFsdWUgaW5zdGFuY2VvZiBVaW50OEFycmF5KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/is/u8a.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/object/spread.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/util/object/spread.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   objectSpread: () => (/* binding */ objectSpread)\n/* harmony export */ });\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nfunction objectSpread(dest, ...sources) {\n    for (let i = 0, count = sources.length; i < count; i++) {\n        const src = sources[i];\n        if (src) {\n            if (typeof src.entries === 'function') {\n                for (const [key, value] of src.entries()) {\n                    dest[key] = value;\n                }\n            }\n            else {\n                Object.assign(dest, src);\n            }\n        }\n    }\n    return dest;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvb2JqZWN0L3NwcmVhZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDRDQUE0QyxXQUFXO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL29iamVjdC9zcHJlYWQuanM/Yzg2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuYW1lIG9iamVjdFNwcmVhZFxuICogQHN1bW1hcnkgQ29uY2F0cyBhbGwgc291cmNlcyBpbnRvIHRoZSBkZXN0aW5hdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gb2JqZWN0U3ByZWFkKGRlc3QsIC4uLnNvdXJjZXMpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgY291bnQgPSBzb3VyY2VzLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgY29uc3Qgc3JjID0gc291cmNlc1tpXTtcbiAgICAgICAgaWYgKHNyYykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBzcmMuZW50cmllcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHNyYy5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzdFtrZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihkZXN0LCBzcmMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkZXN0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/object/spread.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/string/toU8a.js":
/*!*****************************************************!*\
  !*** ./node_modules/@polkadot/util/string/toU8a.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringToU8a: () => (/* binding */ stringToU8a)\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-textencoder */ \"(ssr)/./node_modules/@polkadot/x-textencoder/node.js\");\n\nconst encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\nfunction stringToU8a(value) {\n    return value\n        ? encoder.encode(value.toString())\n        : new Uint8Array();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvc3RyaW5nL3RvVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBQ3RELG9CQUFvQixnRUFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3N0cmluZy90b1U4YS5qcz9lNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRleHRFbmNvZGVyIH0gZnJvbSAnQHBvbGthZG90L3gtdGV4dGVuY29kZXInO1xuY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuLyoqXG4gKiBAbmFtZSBzdHJpbmdUb1U4YVxuICogQHN1bW1hcnkgQ3JlYXRlcyBhIFVpbnQ4QXJyYXkgb2JqZWN0IGZyb20gYSB1dGYtOCBzdHJpbmcuXG4gKiBAZGVzY3JpcHRpb25cbiAqIFN0cmluZyBpbnB1dCB2YWx1ZXMgcmV0dXJuIHRoZSBhY3R1YWwgZW5jb2RlZCBgVUludDhBcnJheWAuIGBudWxsYCBvciBgdW5kZWZpbmVkYCB2YWx1ZXMgcmV0dXJucyBhbiBlbXB0eSBlbmNvZGVkIGFycmF5LlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyBzdHJpbmdUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiBzdHJpbmdUb1U4YSgnaGVsbG8nKTsgLy8gWzB4NjgsIDB4NjUsIDB4NmMsIDB4NmMsIDB4NmZdXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ1RvVThhKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlXG4gICAgICAgID8gZW5jb2Rlci5lbmNvZGUodmFsdWUudG9TdHJpbmcoKSlcbiAgICAgICAgOiBuZXcgVWludDhBcnJheSgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/string/toU8a.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/u8a/concat.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/concat.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aConcat: () => (/* binding */ u8aConcat),\n/* harmony export */   u8aConcatStrict: () => (/* binding */ u8aConcatStrict)\n/* harmony export */ });\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\nfunction u8aConcat(...list) {\n    const count = list.length;\n    const u8as = new Array(count);\n    let length = 0;\n    for (let i = 0; i < count; i++) {\n        u8as[i] = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(list[i]);\n        length += u8as[i].length;\n    }\n    return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\nfunction u8aConcatStrict(u8as, length = 0) {\n    const count = u8as.length;\n    let offset = 0;\n    if (!length) {\n        for (let i = 0; i < count; i++) {\n            length += u8as[i].length;\n        }\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0; i < count; i++) {\n        result.set(u8as[i], offset);\n        offset += u8as[i].length;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL2NvbmNhdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxZQUFZO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CLGtCQUFrQixtREFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsV0FBVztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixXQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS9jb25jYXQuanM/MjllZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJy4vdG9VOGEuanMnO1xuLyoqXG4gKiBAbmFtZSB1OGFDb25jYXRcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBjb25jYXRlbmF0ZWQgVWludDhBcnJheSBmcm9tIHRoZSBpbnB1dHMuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbmNhdGVuYXRlcyB0aGUgaW5wdXQgYXJyYXlzIGludG8gYSBzaW5nbGUgYFVJbnQ4QXJyYXlgLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyB7IHU4YUNvbmNhdCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiB1OGFDb25jYXQoXG4gKiAgIG5ldyBVaW50OEFycmF5KFsxLCAyLCAzXSksXG4gKiAgIG5ldyBVaW50OEFycmF5KFs0LCA1LCA2XSlcbiAqICk7IC8vIFsxLCAyLCAzLCA0LCA1LCA2XVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFDb25jYXQoLi4ubGlzdCkge1xuICAgIGNvbnN0IGNvdW50ID0gbGlzdC5sZW5ndGg7XG4gICAgY29uc3QgdThhcyA9IG5ldyBBcnJheShjb3VudCk7XG4gICAgbGV0IGxlbmd0aCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgIHU4YXNbaV0gPSB1OGFUb1U4YShsaXN0W2ldKTtcbiAgICAgICAgbGVuZ3RoICs9IHU4YXNbaV0ubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gdThhQ29uY2F0U3RyaWN0KHU4YXMsIGxlbmd0aCk7XG59XG4vKipcbiAqIEBuYW1lIHU4YUNvbmNhdFN0cmljdFxuICogQGRlc2NyaXB0aW9uIEEgc3RyaWN0IHZlcnNpb24gb2YgW1t1OGFDb25jYXRdXSwgYWNjZXB0aW5nIG9ubHkgVWludDhBcnJheSBpbnB1dHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YUNvbmNhdFN0cmljdCh1OGFzLCBsZW5ndGggPSAwKSB7XG4gICAgY29uc3QgY291bnQgPSB1OGFzLmxlbmd0aDtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIGxlbmd0aCArPSB1OGFzW2ldLmxlbmd0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICByZXN1bHQuc2V0KHU4YXNbaV0sIG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSB1OGFzW2ldLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/u8a/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/u8a/eq.js":
/*!***********************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/eq.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aEq: () => (/* binding */ u8aEq)\n/* harmony export */ });\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nfunction u8aEq(a, b) {\n    const u8aa = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(a);\n    const u8ab = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(b);\n    if (u8aa.length === u8ab.length) {\n        const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n        const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n        const mod = (u8aa.length % 4) | 0;\n        const length = (u8aa.length - mod) | 0;\n        for (let i = 0; i < length; i += 4) {\n            if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n                return false;\n            }\n        }\n        for (let i = length, count = u8aa.length; i < count; i++) {\n            if (u8aa[i] !== u8ab[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL2VxLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQjtBQUNBLHNFQUFzRTtBQUN0RTtBQUNBO0FBQ087QUFDUCxpQkFBaUIsbURBQVE7QUFDekIsaUJBQWlCLG1EQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxXQUFXO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS9lcS5qcz82NzExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YVRvVThhIH0gZnJvbSAnLi90b1U4YS5qcyc7XG4vKipcbiAqIEBuYW1lIHU4YUVxXG4gKiBAc3VtbWFyeSBDb21wYXJlcyB0d28gVWludDhBcnJheXMgZm9yIGVxdWFsaXR5LlxuICogQGRlc2NyaXB0aW9uXG4gKiBGb3IgYFVJbnQ4QXJyYXlgIChvciBoZXggc3RyaW5nKSBpbnB1dCB2YWx1ZXMgdHJ1ZSBpZiB0aGVyZSBpcyBhIG1hdGNoLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyB1OGFFcSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiB1OGFFcShuZXcgVWludDhBcnJheShbMHg2OCwgMHg2NV0pLCBuZXcgVWludDhBcnJheShbMHg2OCwgMHg2NV0pKTsgLy8gdHJ1ZVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFFcShhLCBiKSB7XG4gICAgY29uc3QgdThhYSA9IHU4YVRvVThhKGEpO1xuICAgIGNvbnN0IHU4YWIgPSB1OGFUb1U4YShiKTtcbiAgICBpZiAodThhYS5sZW5ndGggPT09IHU4YWIubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IGR2QSA9IG5ldyBEYXRhVmlldyh1OGFhLmJ1ZmZlciwgdThhYS5ieXRlT2Zmc2V0KTtcbiAgICAgICAgY29uc3QgZHZCID0gbmV3IERhdGFWaWV3KHU4YWIuYnVmZmVyLCB1OGFiLmJ5dGVPZmZzZXQpO1xuICAgICAgICBjb25zdCBtb2QgPSAodThhYS5sZW5ndGggJSA0KSB8IDA7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9ICh1OGFhLmxlbmd0aCAtIG1vZCkgfCAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSA0KSB7XG4gICAgICAgICAgICBpZiAoZHZBLmdldFVpbnQzMihpKSAhPT0gZHZCLmdldFVpbnQzMihpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gbGVuZ3RoLCBjb3VudCA9IHU4YWEubGVuZ3RoOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICAgICAgaWYgKHU4YWFbaV0gIT09IHU4YWJbaV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/u8a/eq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/u8a/toHex.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toHex.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToHex: () => (/* binding */ u8aToHex)\n/* harmony export */ });\nconst U8 = new Array(256);\nconst U16 = new Array(256 * 256);\nfor (let n = 0; n < 256; n++) {\n    U8[n] = n.toString(16).padStart(2, '0');\n}\nfor (let i = 0; i < 256; i++) {\n    const s = i << 8;\n    for (let j = 0; j < 256; j++) {\n        U16[s | j] = U8[i] + U8[j];\n    }\n}\n/** @internal */\nfunction hex(value, result) {\n    const mod = (value.length % 2) | 0;\n    const length = (value.length - mod) | 0;\n    for (let i = 0; i < length; i += 2) {\n        result += U16[(value[i] << 8) | value[i + 1]];\n    }\n    if (mod) {\n        result += U8[value[length] | 0];\n    }\n    return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\nfunction u8aToHex(value, bitLength = -1, isPrefixed = true) {\n    // this is not 100% correct sinmce we support isPrefixed = false....\n    const empty = isPrefixed\n        ? '0x'\n        : '';\n    if (!value?.length) {\n        return empty;\n    }\n    else if (bitLength > 0) {\n        const length = Math.ceil(bitLength / 8);\n        if (value.length > length) {\n            return `${hex(value.subarray(0, length / 2), empty)}…${hex(value.subarray(value.length - length / 2), '')}`;\n        }\n    }\n    return hex(value, empty);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL3RvSGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBLDREQUE0RDtBQUM1RDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwQ0FBMEMsR0FBRyxtREFBbUQ7QUFDdEg7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS90b0hleC5qcz9lNmIyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFU4ID0gbmV3IEFycmF5KDI1Nik7XG5jb25zdCBVMTYgPSBuZXcgQXJyYXkoMjU2ICogMjU2KTtcbmZvciAobGV0IG4gPSAwOyBuIDwgMjU2OyBuKyspIHtcbiAgICBVOFtuXSA9IG4udG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyk7XG59XG5mb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgaSsrKSB7XG4gICAgY29uc3QgcyA9IGkgPDwgODtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IDI1NjsgaisrKSB7XG4gICAgICAgIFUxNltzIHwgal0gPSBVOFtpXSArIFU4W2pdO1xuICAgIH1cbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmZ1bmN0aW9uIGhleCh2YWx1ZSwgcmVzdWx0KSB7XG4gICAgY29uc3QgbW9kID0gKHZhbHVlLmxlbmd0aCAlIDIpIHwgMDtcbiAgICBjb25zdCBsZW5ndGggPSAodmFsdWUubGVuZ3RoIC0gbW9kKSB8IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMikge1xuICAgICAgICByZXN1bHQgKz0gVTE2Wyh2YWx1ZVtpXSA8PCA4KSB8IHZhbHVlW2kgKyAxXV07XG4gICAgfVxuICAgIGlmIChtb2QpIHtcbiAgICAgICAgcmVzdWx0ICs9IFU4W3ZhbHVlW2xlbmd0aF0gfCAwXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQG5hbWUgdThhVG9IZXhcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSBoZXggc3RyaW5nIGZyb20gYSBVaW50OEFycmF5IG9iamVjdC5cbiAqIEBkZXNjcmlwdGlvblxuICogYFVJbnQ4QXJyYXlgIGlucHV0IHZhbHVlcyByZXR1cm4gdGhlIGFjdHVhbCBoZXggc3RyaW5nLiBgbnVsbGAgb3IgYHVuZGVmaW5lZGAgdmFsdWVzIHJldHVybnMgYW4gYDB4YCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogPEJSPlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IHU4YVRvSGV4IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuICpcbiAqIHU4YVRvSGV4KG5ldyBVaW50OEFycmF5KFsweDY4LCAweDY1LCAweDZjLCAweDZjLCAweGZdKSk7IC8vIDB4Njg2NTZjMGZcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhVG9IZXgodmFsdWUsIGJpdExlbmd0aCA9IC0xLCBpc1ByZWZpeGVkID0gdHJ1ZSkge1xuICAgIC8vIHRoaXMgaXMgbm90IDEwMCUgY29ycmVjdCBzaW5tY2Ugd2Ugc3VwcG9ydCBpc1ByZWZpeGVkID0gZmFsc2UuLi4uXG4gICAgY29uc3QgZW1wdHkgPSBpc1ByZWZpeGVkXG4gICAgICAgID8gJzB4J1xuICAgICAgICA6ICcnO1xuICAgIGlmICghdmFsdWU/Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZW1wdHk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGJpdExlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gTWF0aC5jZWlsKGJpdExlbmd0aCAvIDgpO1xuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID4gbGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7aGV4KHZhbHVlLnN1YmFycmF5KDAsIGxlbmd0aCAvIDIpLCBlbXB0eSl94oCmJHtoZXgodmFsdWUuc3ViYXJyYXkodmFsdWUubGVuZ3RoIC0gbGVuZ3RoIC8gMiksICcnKX1gO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoZXgodmFsdWUsIGVtcHR5KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/u8a/toHex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/u8a/toString.js":
/*!*****************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toString.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToString: () => (/* binding */ u8aToString)\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-textdecoder */ \"(ssr)/./node_modules/@polkadot/x-textdecoder/node.js\");\n\nconst decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\nfunction u8aToString(value) {\n    return value\n        ? decoder.decode(value)\n        : '';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL3RvU3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBQ3RELG9CQUFvQixnRUFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC91dGlsL3U4YS90b1N0cmluZy5qcz80MWRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRleHREZWNvZGVyIH0gZnJvbSAnQHBvbGthZG90L3gtdGV4dGRlY29kZXInO1xuY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigndXRmLTgnKTtcbi8qKlxuICogQG5hbWUgdThhVG9TdHJpbmdcbiAqIEBzdW1tYXJ5IENyZWF0ZXMgYSB1dGYtOCBzdHJpbmcgZnJvbSBhIFVpbnQ4QXJyYXkgb2JqZWN0LlxuICogQGRlc2NyaXB0aW9uXG4gKiBgVUludDhBcnJheWAgaW5wdXQgdmFsdWVzIHJldHVybiB0aGUgYWN0dWFsIGRlY29kZWQgdXRmLTggc3RyaW5nLiBgbnVsbGAgb3IgYHVuZGVmaW5lZGAgdmFsdWVzIHJldHVybnMgYW4gZW1wdHkgc3RyaW5nLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyB1OGFUb1N0cmluZyB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiB1OGFUb1N0cmluZyhuZXcgVWludDhBcnJheShbMHg2OCwgMHg2NSwgMHg2YywgMHg2YywgMHg2Zl0pKTsgLy8gaGVsbG9cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gdThhVG9TdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWVcbiAgICAgICAgPyBkZWNvZGVyLmRlY29kZSh2YWx1ZSlcbiAgICAgICAgOiAnJztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/u8a/toString.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/toU8a.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u8aToU8a: () => (/* binding */ u8aToU8a)\n/* harmony export */ });\n/* harmony import */ var _hex_toU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hex/toU8a.js */ \"(ssr)/./node_modules/@polkadot/util/hex/toU8a.js\");\n/* harmony import */ var _is_buffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../is/buffer.js */ \"(ssr)/./node_modules/@polkadot/util/is/buffer.js\");\n/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../is/hex.js */ \"(ssr)/./node_modules/@polkadot/util/is/hex.js\");\n/* harmony import */ var _is_u8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../is/u8a.js */ \"(ssr)/./node_modules/@polkadot/util/is/u8a.js\");\n/* harmony import */ var _string_toU8a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../string/toU8a.js */ \"(ssr)/./node_modules/@polkadot/util/string/toU8a.js\");\n\n\n\n\n\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\nfunction u8aToU8a(value) {\n    return (0,_is_u8a_js__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value)\n        // NOTE isBuffer needs to go here since it actually extends\n        // Uint8Array on Node.js environments, so all Buffer are Uint8Array,\n        // but Uint8Array is not Buffer\n        ? (0,_is_buffer_js__WEBPACK_IMPORTED_MODULE_1__.isBuffer)(value)\n            ? new Uint8Array(value)\n            : value\n        : (0,_is_hex_js__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)\n            ? (0,_hex_toU8a_js__WEBPACK_IMPORTED_MODULE_3__.hexToU8a)(value)\n            : Array.isArray(value)\n                ? new Uint8Array(value)\n                : (0,_string_toU8a_js__WEBPACK_IMPORTED_MODULE_4__.stringToU8a)(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL3RvVThhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNBO0FBQ047QUFDQTtBQUNZO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBLDBDQUEwQztBQUMxQyxxQkFBcUI7QUFDckI7QUFDQTtBQUNPO0FBQ1AsV0FBVyxpREFBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQSxVQUFVLHVEQUFRO0FBQ2xCO0FBQ0E7QUFDQSxVQUFVLGlEQUFLO0FBQ2YsY0FBYyx1REFBUTtBQUN0QjtBQUNBO0FBQ0Esa0JBQWtCLDZEQUFXO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvdG9VOGEuanM/NzkzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb1U4YSB9IGZyb20gJy4uL2hleC90b1U4YS5qcyc7XG5pbXBvcnQgeyBpc0J1ZmZlciB9IGZyb20gJy4uL2lzL2J1ZmZlci5qcyc7XG5pbXBvcnQgeyBpc0hleCB9IGZyb20gJy4uL2lzL2hleC5qcyc7XG5pbXBvcnQgeyBpc1U4YSB9IGZyb20gJy4uL2lzL3U4YS5qcyc7XG5pbXBvcnQgeyBzdHJpbmdUb1U4YSB9IGZyb20gJy4uL3N0cmluZy90b1U4YS5qcyc7XG4vKipcbiAqIEBuYW1lIHU4YVRvVThhXG4gKiBAc3VtbWFyeSBDcmVhdGVzIGEgVWludDhBcnJheSB2YWx1ZSBmcm9tIGEgVWludDhBcnJheSwgQnVmZmVyLCBzdHJpbmcgb3IgaGV4IGlucHV0LlxuICogQGRlc2NyaXB0aW9uXG4gKiBgbnVsbGAgb3IgYHVuZGVmaW5lZGAgaW5wdXRzIHJldHVybnMgYSBgW11gIHJlc3VsdCwgVWludDhBcnJheSB2YWx1ZXMgcmV0dXJucyB0aGUgdmFsdWUsIGhleCBzdHJpbmdzIHJldHVybnMgYSBVaW50OEFycmF5IHJlcHJlc2VudGF0aW9uLlxuICogQGV4YW1wbGVcbiAqIDxCUj5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBpbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcbiAqXG4gKiB1OGFUb1U4YShuZXcgVWludDhBcnJheShbMHgxMiwgMHgzNF0pOyAvLyA9PiBVaW50OEFycmF5KFsweDEyLCAweDM0XSlcbiAqIHU4YVRvVThhKDB4MTIzNCk7IC8vID0+IFVpbnQ4QXJyYXkoWzB4MTIsIDB4MzRdKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFUb1U4YSh2YWx1ZSkge1xuICAgIHJldHVybiBpc1U4YSh2YWx1ZSlcbiAgICAgICAgLy8gTk9URSBpc0J1ZmZlciBuZWVkcyB0byBnbyBoZXJlIHNpbmNlIGl0IGFjdHVhbGx5IGV4dGVuZHNcbiAgICAgICAgLy8gVWludDhBcnJheSBvbiBOb2RlLmpzIGVudmlyb25tZW50cywgc28gYWxsIEJ1ZmZlciBhcmUgVWludDhBcnJheSxcbiAgICAgICAgLy8gYnV0IFVpbnQ4QXJyYXkgaXMgbm90IEJ1ZmZlclxuICAgICAgICA/IGlzQnVmZmVyKHZhbHVlKVxuICAgICAgICAgICAgPyBuZXcgVWludDhBcnJheSh2YWx1ZSlcbiAgICAgICAgICAgIDogdmFsdWVcbiAgICAgICAgOiBpc0hleCh2YWx1ZSlcbiAgICAgICAgICAgID8gaGV4VG9VOGEodmFsdWUpXG4gICAgICAgICAgICA6IEFycmF5LmlzQXJyYXkodmFsdWUpXG4gICAgICAgICAgICAgICAgPyBuZXcgVWludDhBcnJheSh2YWx1ZSlcbiAgICAgICAgICAgICAgICA6IHN0cmluZ1RvVThhKHZhbHVlKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/util/u8a/wrap.js":
/*!*************************************************!*\
  !*** ./node_modules/@polkadot/util/u8a/wrap.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   U8A_WRAP_ETHEREUM: () => (/* binding */ U8A_WRAP_ETHEREUM),\n/* harmony export */   U8A_WRAP_POSTFIX: () => (/* binding */ U8A_WRAP_POSTFIX),\n/* harmony export */   U8A_WRAP_PREFIX: () => (/* binding */ U8A_WRAP_PREFIX),\n/* harmony export */   u8aIsWrapped: () => (/* binding */ u8aIsWrapped),\n/* harmony export */   u8aUnwrapBytes: () => (/* binding */ u8aUnwrapBytes),\n/* harmony export */   u8aWrapBytes: () => (/* binding */ u8aWrapBytes)\n/* harmony export */ });\n/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concat.js */ \"(ssr)/./node_modules/@polkadot/util/u8a/concat.js\");\n/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eq.js */ \"(ssr)/./node_modules/@polkadot/util/u8a/eq.js\");\n/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toU8a.js */ \"(ssr)/./node_modules/@polkadot/util/u8a/toU8a.js\");\n\n\n\n/** @internal */\nconst U8A_WRAP_ETHEREUM = /*#__PURE__*/ (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)('\\x19Ethereum Signed Message:\\n');\n/** @internal */\nconst U8A_WRAP_PREFIX = /*#__PURE__*/ (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)('<Bytes>');\n/** @internal */\nconst U8A_WRAP_POSTFIX = /*#__PURE__*/ (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */\nfunction u8aIsWrapped(u8a, withEthereum) {\n    return ((u8a.length >= WRAP_LEN &&\n        (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) &&\n        (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX)) ||\n        (withEthereum &&\n            u8a.length >= U8A_WRAP_ETHEREUM.length &&\n            (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM)));\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */\nfunction u8aUnwrapBytes(bytes) {\n    const u8a = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(bytes);\n    // we don't want to unwrap Ethereum-style wraps\n    return u8aIsWrapped(u8a, false)\n        ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length)\n        : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description\n * Adds a <Bytes>...</Bytes> wrapper to the supplied value, if\n * - We don't already have a Bytes wrapper\n * - The message is not an Ethereum-style message\n */\nfunction u8aWrapBytes(bytes) {\n    const u8a = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(bytes);\n    return u8aIsWrapped(u8a, true)\n        ? u8a\n        : (0,_concat_js__WEBPACK_IMPORTED_MODULE_2__.u8aConcatStrict)([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3V0aWwvdThhL3dyYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ2Q7QUFDTTtBQUN0QztBQUNPLHdDQUF3QyxtREFBUTtBQUN2RDtBQUNPLHNDQUFzQyxtREFBUTtBQUNyRDtBQUNPLHVDQUF1QyxtREFBUTtBQUN0RDtBQUNBO0FBQ087QUFDUDtBQUNBLFFBQVEsNkNBQUs7QUFDYixRQUFRLDZDQUFLO0FBQ2I7QUFDQTtBQUNBLFlBQVksNkNBQUs7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0JBQWdCLG1EQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0JBQWdCLG1EQUFRO0FBQ3hCO0FBQ0E7QUFDQSxVQUFVLDJEQUFlO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QvdXRpbC91OGEvd3JhcC5qcz9lMGU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHU4YUNvbmNhdFN0cmljdCB9IGZyb20gJy4vY29uY2F0LmpzJztcbmltcG9ydCB7IHU4YUVxIH0gZnJvbSAnLi9lcS5qcyc7XG5pbXBvcnQgeyB1OGFUb1U4YSB9IGZyb20gJy4vdG9VOGEuanMnO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNvbnN0IFU4QV9XUkFQX0VUSEVSRVVNID0gLyojX19QVVJFX18qLyB1OGFUb1U4YSgnXFx4MTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcXG4nKTtcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjb25zdCBVOEFfV1JBUF9QUkVGSVggPSAvKiNfX1BVUkVfXyovIHU4YVRvVThhKCc8Qnl0ZXM+Jyk7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY29uc3QgVThBX1dSQVBfUE9TVEZJWCA9IC8qI19fUFVSRV9fKi8gdThhVG9VOGEoJzwvQnl0ZXM+Jyk7XG5jb25zdCBXUkFQX0xFTiA9IFU4QV9XUkFQX1BSRUZJWC5sZW5ndGggKyBVOEFfV1JBUF9QT1NURklYLmxlbmd0aDtcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFJc1dyYXBwZWQodThhLCB3aXRoRXRoZXJldW0pIHtcbiAgICByZXR1cm4gKCh1OGEubGVuZ3RoID49IFdSQVBfTEVOICYmXG4gICAgICAgIHU4YUVxKHU4YS5zdWJhcnJheSgwLCBVOEFfV1JBUF9QUkVGSVgubGVuZ3RoKSwgVThBX1dSQVBfUFJFRklYKSAmJlxuICAgICAgICB1OGFFcSh1OGEuc2xpY2UoLVU4QV9XUkFQX1BPU1RGSVgubGVuZ3RoKSwgVThBX1dSQVBfUE9TVEZJWCkpIHx8XG4gICAgICAgICh3aXRoRXRoZXJldW0gJiZcbiAgICAgICAgICAgIHU4YS5sZW5ndGggPj0gVThBX1dSQVBfRVRIRVJFVU0ubGVuZ3RoICYmXG4gICAgICAgICAgICB1OGFFcSh1OGEuc3ViYXJyYXkoMCwgVThBX1dSQVBfRVRIRVJFVU0ubGVuZ3RoKSwgVThBX1dSQVBfRVRIRVJFVU0pKSk7XG59XG4vKipcbiAqIEBuYW1lIHU4YVVud3JhcEJ5dGVzXG4gKiBAZGVzY3JpcHRpb24gUmVtb3ZlcyBhbGwgPEJ5dGVzPi4uLjwvQnl0ZXM+IHdyYXBwZXJzIGZyb20gdGhlIHN1cHBsaWVkIHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1OGFVbndyYXBCeXRlcyhieXRlcykge1xuICAgIGNvbnN0IHU4YSA9IHU4YVRvVThhKGJ5dGVzKTtcbiAgICAvLyB3ZSBkb24ndCB3YW50IHRvIHVud3JhcCBFdGhlcmV1bS1zdHlsZSB3cmFwc1xuICAgIHJldHVybiB1OGFJc1dyYXBwZWQodThhLCBmYWxzZSlcbiAgICAgICAgPyB1OGEuc3ViYXJyYXkoVThBX1dSQVBfUFJFRklYLmxlbmd0aCwgdThhLmxlbmd0aCAtIFU4QV9XUkFQX1BPU1RGSVgubGVuZ3RoKVxuICAgICAgICA6IHU4YTtcbn1cbi8qKlxuICogQG5hbWUgdThhV3JhcEJ5dGVzXG4gKiBAZGVzY3JpcHRpb25cbiAqIEFkZHMgYSA8Qnl0ZXM+Li4uPC9CeXRlcz4gd3JhcHBlciB0byB0aGUgc3VwcGxpZWQgdmFsdWUsIGlmXG4gKiAtIFdlIGRvbid0IGFscmVhZHkgaGF2ZSBhIEJ5dGVzIHdyYXBwZXJcbiAqIC0gVGhlIG1lc3NhZ2UgaXMgbm90IGFuIEV0aGVyZXVtLXN0eWxlIG1lc3NhZ2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHU4YVdyYXBCeXRlcyhieXRlcykge1xuICAgIGNvbnN0IHU4YSA9IHU4YVRvVThhKGJ5dGVzKTtcbiAgICByZXR1cm4gdThhSXNXcmFwcGVkKHU4YSwgdHJ1ZSlcbiAgICAgICAgPyB1OGFcbiAgICAgICAgOiB1OGFDb25jYXRTdHJpY3QoW1U4QV9XUkFQX1BSRUZJWCwgdThhLCBVOEFfV1JBUF9QT1NURklYXSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/util/u8a/wrap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-bridge/bridge.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/wasm-bridge/bridge.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bridge: () => (/* binding */ Bridge)\n/* harmony export */ });\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/u8a/toString.js\");\n/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/util */ \"(ssr)/./node_modules/@polkadot/util/string/toU8a.js\");\n/* harmony import */ var _wbg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wbg.js */ \"(ssr)/./node_modules/@polkadot/wasm-bridge/wbg.js\");\n\n\n/**\n * @name Bridge\n * @description\n * Creates a bridge between the JS and WASM environments.\n *\n * For any bridge it is passed an function which is then called internally at the\n * time of initialization. This affectively implements the layer between WASM and\n * the native environment, providing all the plumbing needed for the Wbg classes.\n */\nclass Bridge {\n    __internal__createWasm;\n    __internal__heap;\n    __internal__wbg;\n    __internal__cachegetInt32;\n    __internal__cachegetUint8;\n    __internal__heapNext;\n    __internal__wasm;\n    __internal__wasmError;\n    __internal__wasmPromise;\n    __internal__type;\n    constructor(createWasm) {\n        this.__internal__createWasm = createWasm;\n        this.__internal__cachegetInt32 = null;\n        this.__internal__cachegetUint8 = null;\n        this.__internal__heap = new Array(32)\n            .fill(undefined)\n            .concat(undefined, null, true, false);\n        this.__internal__heapNext = this.__internal__heap.length;\n        this.__internal__type = 'none';\n        this.__internal__wasm = null;\n        this.__internal__wasmError = null;\n        this.__internal__wasmPromise = null;\n        this.__internal__wbg = { ...new _wbg_js__WEBPACK_IMPORTED_MODULE_0__.Wbg(this) };\n    }\n    /** @description Returns the init error */\n    get error() {\n        return this.__internal__wasmError;\n    }\n    /** @description Returns the init type */\n    get type() {\n        return this.__internal__type;\n    }\n    /** @description Returns the created wasm interface */\n    get wasm() {\n        return this.__internal__wasm;\n    }\n    /** @description Performs the wasm initialization */\n    async init(createWasm) {\n        if (!this.__internal__wasmPromise || createWasm) {\n            this.__internal__wasmPromise = (createWasm || this.__internal__createWasm)(this.__internal__wbg);\n        }\n        const { error, type, wasm } = await this.__internal__wasmPromise;\n        this.__internal__type = type;\n        this.__internal__wasm = wasm;\n        this.__internal__wasmError = error;\n        return this.__internal__wasm;\n    }\n    /**\n     * @internal\n     * @description Gets an object from the heap\n     */\n    getObject(idx) {\n        return this.__internal__heap[idx];\n    }\n    /**\n     * @internal\n     * @description Removes an object from the heap\n     */\n    dropObject(idx) {\n        if (idx < 36) {\n            return;\n        }\n        this.__internal__heap[idx] = this.__internal__heapNext;\n        this.__internal__heapNext = idx;\n    }\n    /**\n     * @internal\n     * @description Retrieves and removes an object to the heap\n     */\n    takeObject(idx) {\n        const ret = this.getObject(idx);\n        this.dropObject(idx);\n        return ret;\n    }\n    /**\n     * @internal\n     * @description Adds an object to the heap\n     */\n    addObject(obj) {\n        if (this.__internal__heapNext === this.__internal__heap.length) {\n            this.__internal__heap.push(this.__internal__heap.length + 1);\n        }\n        const idx = this.__internal__heapNext;\n        this.__internal__heapNext = this.__internal__heap[idx];\n        this.__internal__heap[idx] = obj;\n        return idx;\n    }\n    /**\n     * @internal\n     * @description Retrieve an Int32 in the WASM interface\n     */\n    getInt32() {\n        if (this.__internal__cachegetInt32 === null || this.__internal__cachegetInt32.buffer !== this.__internal__wasm.memory.buffer) {\n            this.__internal__cachegetInt32 = new Int32Array(this.__internal__wasm.memory.buffer);\n        }\n        return this.__internal__cachegetInt32;\n    }\n    /**\n     * @internal\n     * @description Retrieve an Uint8Array in the WASM interface\n     */\n    getUint8() {\n        if (this.__internal__cachegetUint8 === null || this.__internal__cachegetUint8.buffer !== this.__internal__wasm.memory.buffer) {\n            this.__internal__cachegetUint8 = new Uint8Array(this.__internal__wasm.memory.buffer);\n        }\n        return this.__internal__cachegetUint8;\n    }\n    /**\n     * @internal\n     * @description Retrieves an Uint8Array in the WASM interface\n     */\n    getU8a(ptr, len) {\n        return this.getUint8().subarray(ptr / 1, ptr / 1 + len);\n    }\n    /**\n     * @internal\n     * @description Retrieves a string in the WASM interface\n     */\n    getString(ptr, len) {\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(this.getU8a(ptr, len));\n    }\n    /**\n     * @internal\n     * @description Allocates an Uint8Array in the WASM interface\n     */\n    allocU8a(arg) {\n        const ptr = this.__internal__wasm.__wbindgen_malloc(arg.length * 1);\n        this.getUint8().set(arg, ptr / 1);\n        return [ptr, arg.length];\n    }\n    /**\n     * @internal\n     * @description Allocates a string in the WASM interface\n     */\n    allocString(arg) {\n        return this.allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));\n    }\n    /**\n     * @internal\n     * @description Retrieves an Uint8Array from the WASM interface\n     */\n    resultU8a() {\n        const r0 = this.getInt32()[8 / 4 + 0];\n        const r1 = this.getInt32()[8 / 4 + 1];\n        const ret = this.getU8a(r0, r1).slice();\n        this.__internal__wasm.__wbindgen_free(r0, r1 * 1);\n        return ret;\n    }\n    /**\n     * @internal\n     * @description Retrieve a string from the WASM interface\n     */\n    resultString() {\n        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(this.resultU8a());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-bridge/bridge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-bridge/init.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-bridge/init.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWasmFn: () => (/* binding */ createWasmFn)\n/* harmony export */ });\n/**\n * @name createWasmFn\n * @description\n * Create a WASM (or ASM.js) creator interface based on the supplied information.\n *\n * It will attempt to create a WASM interface first and if this fails or is not available in\n * the environment, will fallback to attempting to create an ASM.js interface.\n */\nfunction createWasmFn(root, wasmBytes, asmFn) {\n    return async (wbg) => {\n        const result = {\n            error: null,\n            type: 'none',\n            wasm: null\n        };\n        try {\n            if (!wasmBytes?.length) {\n                throw new Error('No WebAssembly provided for initialization');\n            }\n            else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {\n                throw new Error('WebAssembly is not available in your environment');\n            }\n            const source = await WebAssembly.instantiate(wasmBytes, { wbg });\n            result.wasm = source.instance.exports;\n            result.type = 'wasm';\n        }\n        catch (error) {\n            // if we have a valid supplied asm.js, return that\n            if (typeof asmFn === 'function') {\n                result.wasm = asmFn(wbg);\n                result.type = 'asm';\n            }\n            else {\n                result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;\n                console.error(result.error);\n            }\n        }\n        return result;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tYnJpZGdlL2luaXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLEtBQUs7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsS0FBSyxLQUFLLGNBQWM7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1icmlkZ2UvaW5pdC5qcz9iYjJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG5hbWUgY3JlYXRlV2FzbUZuXG4gKiBAZGVzY3JpcHRpb25cbiAqIENyZWF0ZSBhIFdBU00gKG9yIEFTTS5qcykgY3JlYXRvciBpbnRlcmZhY2UgYmFzZWQgb24gdGhlIHN1cHBsaWVkIGluZm9ybWF0aW9uLlxuICpcbiAqIEl0IHdpbGwgYXR0ZW1wdCB0byBjcmVhdGUgYSBXQVNNIGludGVyZmFjZSBmaXJzdCBhbmQgaWYgdGhpcyBmYWlscyBvciBpcyBub3QgYXZhaWxhYmxlIGluXG4gKiB0aGUgZW52aXJvbm1lbnQsIHdpbGwgZmFsbGJhY2sgdG8gYXR0ZW1wdGluZyB0byBjcmVhdGUgYW4gQVNNLmpzIGludGVyZmFjZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVdhc21Gbihyb290LCB3YXNtQnl0ZXMsIGFzbUZuKSB7XG4gICAgcmV0dXJuIGFzeW5jICh3YmcpID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiAnbm9uZScsXG4gICAgICAgICAgICB3YXNtOiBudWxsXG4gICAgICAgIH07XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIXdhc21CeXRlcz8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBXZWJBc3NlbWJseSBwcm92aWRlZCBmb3IgaW5pdGlhbGl6YXRpb24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBXZWJBc3NlbWJseSAhPT0gJ29iamVjdCcgfHwgdHlwZW9mIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdXZWJBc3NlbWJseSBpcyBub3QgYXZhaWxhYmxlIGluIHlvdXIgZW52aXJvbm1lbnQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IGF3YWl0IFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHdhc21CeXRlcywgeyB3YmcgfSk7XG4gICAgICAgICAgICByZXN1bHQud2FzbSA9IHNvdXJjZS5pbnN0YW5jZS5leHBvcnRzO1xuICAgICAgICAgICAgcmVzdWx0LnR5cGUgPSAnd2FzbSc7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAvLyBpZiB3ZSBoYXZlIGEgdmFsaWQgc3VwcGxpZWQgYXNtLmpzLCByZXR1cm4gdGhhdFxuICAgICAgICAgICAgaWYgKHR5cGVvZiBhc21GbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdC53YXNtID0gYXNtRm4od2JnKTtcbiAgICAgICAgICAgICAgICByZXN1bHQudHlwZSA9ICdhc20nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmVycm9yID0gYEZBVEFMOiBVbmFibGUgdG8gaW5pdGlhbGl6ZSBAcG9sa2Fkb3Qvd2FzbS0ke3Jvb3R9OjogJHtlcnJvci5tZXNzYWdlfWA7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihyZXN1bHQuZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-bridge/init.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-bridge/wbg.js":
/*!***************************************************!*\
  !*** ./node_modules/@polkadot/wasm-bridge/wbg.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wbg: () => (/* binding */ Wbg)\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/x-randomvalues */ \"(ssr)/./node_modules/@polkadot/x-randomvalues/node.js\");\n\nconst DEFAULT_CRYPTO = { getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues };\nconst DEFAULT_SELF = { crypto: DEFAULT_CRYPTO };\n/**\n * @name Wbg\n * @description\n * This defines the internal interfaces that wasm-bindgen used to communicate\n * with the host layer. None of these functions are available to the user, rather\n * they are called internally from the WASM code itself.\n *\n * The interfaces here are exposed in the imports on the created WASM interfaces.\n *\n * Internally the implementation does a thin layer into the supplied bridge.\n */\nclass Wbg {\n    __internal__bridge;\n    constructor(bridge) {\n        this.__internal__bridge = bridge;\n    }\n    /** @internal */\n    abort = () => {\n        throw new Error('abort');\n    };\n    /** @internal */\n    __wbindgen_is_undefined = (idx) => {\n        return this.__internal__bridge.getObject(idx) === undefined;\n    };\n    /** @internal */\n    __wbindgen_throw = (ptr, len) => {\n        throw new Error(this.__internal__bridge.getString(ptr, len));\n    };\n    /** @internal */\n    __wbg_self_1b7a39e3a92c949c = () => {\n        return this.__internal__bridge.addObject(DEFAULT_SELF);\n    };\n    /** @internal */\n    __wbg_require_604837428532a733 = (ptr, len) => {\n        throw new Error(`Unable to require ${this.__internal__bridge.getString(ptr, len)}`);\n    };\n    /** @internal */\n    __wbg_crypto_968f1772287e2df0 = (_idx) => {\n        return this.__internal__bridge.addObject(DEFAULT_CRYPTO);\n    };\n    /** @internal */\n    __wbg_getRandomValues_a3d34b4fee3c2869 = (_idx) => {\n        return this.__internal__bridge.addObject(DEFAULT_CRYPTO.getRandomValues);\n    };\n    /** @internal */\n    __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {\n        DEFAULT_CRYPTO.getRandomValues(this.__internal__bridge.getU8a(ptr, len));\n    };\n    /** @internal */\n    __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {\n        throw new Error('randomFillsync is not available');\n        // getObject(idx).randomFillSync(getU8a(ptr, len));\n    };\n    /** @internal */\n    __wbindgen_object_drop_ref = (idx) => {\n        this.__internal__bridge.takeObject(idx);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tYnJpZGdlL3diZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRDtBQUMzRCx5QkFBeUIsZUFBZTtBQUN4Qyx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsNENBQTRDO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWJyaWRnZS93YmcuanM/ZTU4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRSYW5kb21WYWx1ZXMgfSBmcm9tICdAcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMnO1xuY29uc3QgREVGQVVMVF9DUllQVE8gPSB7IGdldFJhbmRvbVZhbHVlcyB9O1xuY29uc3QgREVGQVVMVF9TRUxGID0geyBjcnlwdG86IERFRkFVTFRfQ1JZUFRPIH07XG4vKipcbiAqIEBuYW1lIFdiZ1xuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIGRlZmluZXMgdGhlIGludGVybmFsIGludGVyZmFjZXMgdGhhdCB3YXNtLWJpbmRnZW4gdXNlZCB0byBjb21tdW5pY2F0ZVxuICogd2l0aCB0aGUgaG9zdCBsYXllci4gTm9uZSBvZiB0aGVzZSBmdW5jdGlvbnMgYXJlIGF2YWlsYWJsZSB0byB0aGUgdXNlciwgcmF0aGVyXG4gKiB0aGV5IGFyZSBjYWxsZWQgaW50ZXJuYWxseSBmcm9tIHRoZSBXQVNNIGNvZGUgaXRzZWxmLlxuICpcbiAqIFRoZSBpbnRlcmZhY2VzIGhlcmUgYXJlIGV4cG9zZWQgaW4gdGhlIGltcG9ydHMgb24gdGhlIGNyZWF0ZWQgV0FTTSBpbnRlcmZhY2VzLlxuICpcbiAqIEludGVybmFsbHkgdGhlIGltcGxlbWVudGF0aW9uIGRvZXMgYSB0aGluIGxheWVyIGludG8gdGhlIHN1cHBsaWVkIGJyaWRnZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFdiZyB7XG4gICAgX19pbnRlcm5hbF9fYnJpZGdlO1xuICAgIGNvbnN0cnVjdG9yKGJyaWRnZSkge1xuICAgICAgICB0aGlzLl9faW50ZXJuYWxfX2JyaWRnZSA9IGJyaWRnZTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGFib3J0ID0gKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Fib3J0Jyk7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193YmluZGdlbl9pc191bmRlZmluZWQgPSAoaWR4KSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9faW50ZXJuYWxfX2JyaWRnZS5nZXRPYmplY3QoaWR4KSA9PT0gdW5kZWZpbmVkO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JpbmRnZW5fdGhyb3cgPSAocHRyLCBsZW4pID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMuX19pbnRlcm5hbF9fYnJpZGdlLmdldFN0cmluZyhwdHIsIGxlbikpO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JnX3NlbGZfMWI3YTM5ZTNhOTJjOTQ5YyA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX19pbnRlcm5hbF9fYnJpZGdlLmFkZE9iamVjdChERUZBVUxUX1NFTEYpO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JnX3JlcXVpcmVfNjA0ODM3NDI4NTMyYTczMyA9IChwdHIsIGxlbikgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byByZXF1aXJlICR7dGhpcy5fX2ludGVybmFsX19icmlkZ2UuZ2V0U3RyaW5nKHB0ciwgbGVuKX1gKTtcbiAgICB9O1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBfX3diZ19jcnlwdG9fOTY4ZjE3NzIyODdlMmRmMCA9IChfaWR4KSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9faW50ZXJuYWxfX2JyaWRnZS5hZGRPYmplY3QoREVGQVVMVF9DUllQVE8pO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JnX2dldFJhbmRvbVZhbHVlc19hM2QzNGI0ZmVlM2MyODY5ID0gKF9pZHgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX19pbnRlcm5hbF9fYnJpZGdlLmFkZE9iamVjdChERUZBVUxUX0NSWVBUTy5nZXRSYW5kb21WYWx1ZXMpO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9fd2JnX2dldFJhbmRvbVZhbHVlc19mNWUxNGFiN2FjOGU5OTVkID0gKF9hcmcwLCBwdHIsIGxlbikgPT4ge1xuICAgICAgICBERUZBVUxUX0NSWVBUTy5nZXRSYW5kb21WYWx1ZXModGhpcy5fX2ludGVybmFsX19icmlkZ2UuZ2V0VThhKHB0ciwgbGVuKSk7XG4gICAgfTtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgX193YmdfcmFuZG9tRmlsbFN5bmNfZDViZDJkNjU1ZmRmMjU2YSA9IChfaWR4LCBfcHRyLCBfbGVuKSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigncmFuZG9tRmlsbHN5bmMgaXMgbm90IGF2YWlsYWJsZScpO1xuICAgICAgICAvLyBnZXRPYmplY3QoaWR4KS5yYW5kb21GaWxsU3luYyhnZXRVOGEocHRyLCBsZW4pKTtcbiAgICB9O1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBfX3diaW5kZ2VuX29iamVjdF9kcm9wX3JlZiA9IChpZHgpID0+IHtcbiAgICAgICAgdGhpcy5fX2ludGVybmFsX19icmlkZ2UudGFrZU9iamVjdChpZHgpO1xuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-bridge/wbg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto-init/packageInfo.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-init/packageInfo.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/wasm-crypto-init', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/wasm-crypto-init/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/wasm-crypto-init/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '7.3.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvLWluaXQvcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHNCQUFzQiwyQ0FBMkMsS0FBOEIsWUFBWSxpSUFBZSxnQ0FBZ0MsaUlBQWUsbUNBQW1DLENBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWNyeXB0by1pbml0L3BhY2thZ2VJbmZvLmpzPzBkOTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L3dhc20tY3J5cHRvLWluaXQnLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICc3LjMuMicgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto-init/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto-init/wasm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-init/wasm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWasm: () => (/* binding */ createWasm),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo)\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-bridge */ \"(ssr)/./node_modules/@polkadot/wasm-bridge/init.js\");\n/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-crypto-wasm */ \"(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/bundle.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/wasm-crypto-init/packageInfo.js\");\n\n\n\n/**\n * @name createWasm\n * @description\n * Creates an interface using only WASM\n */\nconst createWasm = /*#__PURE__*/ (0,_polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_1__.createWasmFn)('crypto', _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvLWluaXQvd2FzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUNFO0FBQ1I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlDQUFpQyxtRUFBWSxXQUFXLGlFQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8taW5pdC93YXNtLmpzPzUzMDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlV2FzbUZuIH0gZnJvbSAnQHBvbGthZG90L3dhc20tYnJpZGdlJztcbmltcG9ydCB7IHdhc21CeXRlcyB9IGZyb20gJ0Bwb2xrYWRvdC93YXNtLWNyeXB0by13YXNtJztcbmV4cG9ydCB7IHBhY2thZ2VJbmZvIH0gZnJvbSAnLi9wYWNrYWdlSW5mby5qcyc7XG4vKipcbiAqIEBuYW1lIGNyZWF0ZVdhc21cbiAqIEBkZXNjcmlwdGlvblxuICogQ3JlYXRlcyBhbiBpbnRlcmZhY2UgdXNpbmcgb25seSBXQVNNXG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVXYXNtID0gLyojX19QVVJFX18qLyBjcmVhdGVXYXNtRm4oJ2NyeXB0bycsIHdhc21CeXRlcywgbnVsbCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto-init/wasm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/bundle.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-wasm/bundle.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo),\n/* harmony export */   wasmBytes: () => (/* binding */ wasmBytes)\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/wasm-util */ \"(ssr)/./node_modules/@polkadot/wasm-util/fflate.js\");\n/* harmony import */ var _polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polkadot/wasm-util */ \"(ssr)/./node_modules/@polkadot/wasm-util/base64.js\");\n/* harmony import */ var _cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cjs/bytes.js */ \"(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\");\n\n\n\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed from this\n * specific format and returned.\n */\nconst wasmBytes = /*#__PURE__*/ (0,_polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_2__.unzlibSync)((0,_polkadot_wasm_util__WEBPACK_IMPORTED_MODULE_3__.base64Decode)(_cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.bytes, new Uint8Array(_cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.lenIn)), new Uint8Array(_cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.lenOut));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvLXdhc20vYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErRDtBQUNUO0FBQ1A7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLCtEQUFVLENBQUMsaUVBQVksQ0FBQyxnREFBSyxpQkFBaUIsZ0RBQUssbUJBQW1CLGlEQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8td2FzbS9idW5kbGUuanM/N2YyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlNjREZWNvZGUsIHVuemxpYlN5bmMgfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS11dGlsJztcbmltcG9ydCB7IGJ5dGVzLCBsZW5JbiwgbGVuT3V0IH0gZnJvbSAnLi9janMvYnl0ZXMuanMnO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbi8qKlxuICogQG5hbWUgd2FzbUJ5dGVzXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBkZWNvZGVkIFdBU00gaW50ZXJmYWNlIGFzIGV4cG9zZWQgYnkgdGhpcyBwYWNrYWdlLlxuICpcbiAqIFRoZSBidWlsZCBwcm9jZXNzIHdpbGwgb3V0cHV0IGludG8gY2pzLyogaW50byBhIGNvbXByZXNzZWQgYmFzZTY0IGZvcm1hdC5cbiAqIFVwb24gbG9hZGluZyB0aGUgZXhwb3NlZCBieXRlcyB3aWxsIGJlIGRlY29kZWQgYW5kIGRlY29tcHJlc3NlZCBmcm9tIHRoaXNcbiAqIHNwZWNpZmljIGZvcm1hdCBhbmQgcmV0dXJuZWQuXG4gKi9cbmV4cG9ydCBjb25zdCB3YXNtQnl0ZXMgPSAvKiNfX1BVUkVfXyovIHVuemxpYlN5bmMoYmFzZTY0RGVjb2RlKGJ5dGVzLCBuZXcgVWludDhBcnJheShsZW5JbikpLCBuZXcgVWludDhBcnJheShsZW5PdXQpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/bundle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/wasm-crypto-wasm', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '7.3.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvLXdhc20vcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHNCQUFzQiwyQ0FBMkMsS0FBOEIsWUFBWSxpSUFBZSxnQ0FBZ0MsaUlBQWUsbUNBQW1DLENBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWNyeXB0by13YXNtL3BhY2thZ2VJbmZvLmpzP2Q3ODMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L3dhc20tY3J5cHRvLXdhc20nLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICc3LjMuMicgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto/bundle.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto/bundle.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bip39Generate: () => (/* binding */ bip39Generate),\n/* harmony export */   bip39ToEntropy: () => (/* binding */ bip39ToEntropy),\n/* harmony export */   bip39ToMiniSecret: () => (/* binding */ bip39ToMiniSecret),\n/* harmony export */   bip39ToSeed: () => (/* binding */ bip39ToSeed),\n/* harmony export */   bip39Validate: () => (/* binding */ bip39Validate),\n/* harmony export */   blake2b: () => (/* binding */ blake2b),\n/* harmony export */   bridge: () => (/* reexport safe */ _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge),\n/* harmony export */   ed25519KeypairFromSeed: () => (/* binding */ ed25519KeypairFromSeed),\n/* harmony export */   ed25519Sign: () => (/* binding */ ed25519Sign),\n/* harmony export */   ed25519Verify: () => (/* binding */ ed25519Verify),\n/* harmony export */   hmacSha256: () => (/* binding */ hmacSha256),\n/* harmony export */   hmacSha512: () => (/* binding */ hmacSha512),\n/* harmony export */   isReady: () => (/* binding */ isReady),\n/* harmony export */   keccak256: () => (/* binding */ keccak256),\n/* harmony export */   keccak512: () => (/* binding */ keccak512),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),\n/* harmony export */   pbkdf2: () => (/* binding */ pbkdf2),\n/* harmony export */   scrypt: () => (/* binding */ scrypt),\n/* harmony export */   secp256k1Compress: () => (/* binding */ secp256k1Compress),\n/* harmony export */   secp256k1Expand: () => (/* binding */ secp256k1Expand),\n/* harmony export */   secp256k1FromSeed: () => (/* binding */ secp256k1FromSeed),\n/* harmony export */   secp256k1Recover: () => (/* binding */ secp256k1Recover),\n/* harmony export */   secp256k1Sign: () => (/* binding */ secp256k1Sign),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512),\n/* harmony export */   sr25519Agree: () => (/* binding */ sr25519Agree),\n/* harmony export */   sr25519DeriveKeypairHard: () => (/* binding */ sr25519DeriveKeypairHard),\n/* harmony export */   sr25519DeriveKeypairSoft: () => (/* binding */ sr25519DeriveKeypairSoft),\n/* harmony export */   sr25519DerivePublicSoft: () => (/* binding */ sr25519DerivePublicSoft),\n/* harmony export */   sr25519KeypairFromSeed: () => (/* binding */ sr25519KeypairFromSeed),\n/* harmony export */   sr25519Sign: () => (/* binding */ sr25519Sign),\n/* harmony export */   sr25519Verify: () => (/* binding */ sr25519Verify),\n/* harmony export */   twox: () => (/* binding */ twox),\n/* harmony export */   vrfSign: () => (/* binding */ vrfSign),\n/* harmony export */   vrfVerify: () => (/* binding */ vrfVerify),\n/* harmony export */   waitReady: () => (/* binding */ waitReady)\n/* harmony export */ });\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ \"(ssr)/./node_modules/@polkadot/wasm-crypto/init.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/wasm-crypto/packageInfo.js\");\n\n\n\n/**\n * @internal\n * @description\n * This create an extenal interface function from the signature, all the while checking\n * the actual bridge wasm interface to ensure it has been initialized.\n *\n * This means that we can call it\n *\n *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array\n *\n * and in this case it will create an interface function with the signarure\n *\n *   (a: number, b: string) => Uint8Array\n */\nfunction withWasm(fn) {\n    return (...params) => {\n        if (!_init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.wasm) {\n            throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');\n        }\n        return fn(_init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.wasm, ...params);\n    };\n}\nconst bip39Generate = /*#__PURE__*/ withWasm((wasm, words) => {\n    wasm.ext_bip39_generate(8, words);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultString();\n});\nconst bip39ToEntropy = /*#__PURE__*/ withWasm((wasm, phrase) => {\n    wasm.ext_bip39_to_entropy(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst bip39ToMiniSecret = /*#__PURE__*/ withWasm((wasm, phrase, password) => {\n    wasm.ext_bip39_to_mini_secret(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(password));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst bip39ToSeed = /*#__PURE__*/ withWasm((wasm, phrase, password) => {\n    wasm.ext_bip39_to_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(password));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst bip39Validate = /*#__PURE__*/ withWasm((wasm, phrase) => {\n    const ret = wasm.ext_bip39_validate(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocString(phrase));\n    return ret !== 0;\n});\nconst ed25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed) => {\n    wasm.ext_ed_from_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seed));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst ed25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, seckey, message) => {\n    wasm.ext_ed_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seckey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst ed25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey) => {\n    const ret = wasm.ext_ed_verify(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(signature), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return ret !== 0;\n});\nconst secp256k1FromSeed = /*#__PURE__*/ withWasm((wasm, seckey) => {\n    wasm.ext_secp_from_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seckey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Compress = /*#__PURE__*/ withWasm((wasm, pubkey) => {\n    wasm.ext_secp_pub_compress(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Expand = /*#__PURE__*/ withWasm((wasm, pubkey) => {\n    wasm.ext_secp_pub_expand(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Recover = /*#__PURE__*/ withWasm((wasm, msgHash, sig, recovery) => {\n    wasm.ext_secp_recover(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(msgHash), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(sig), recovery);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst secp256k1Sign = /*#__PURE__*/ withWasm((wasm, msgHash, seckey) => {\n    wasm.ext_secp_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(msgHash), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seckey));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519DeriveKeypairHard = /*#__PURE__*/ withWasm((wasm, pair, cc) => {\n    wasm.ext_sr_derive_keypair_hard(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pair), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(cc));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519DeriveKeypairSoft = /*#__PURE__*/ withWasm((wasm, pair, cc) => {\n    wasm.ext_sr_derive_keypair_soft(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pair), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(cc));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519DerivePublicSoft = /*#__PURE__*/ withWasm((wasm, pubkey, cc) => {\n    wasm.ext_sr_derive_public_soft(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(cc));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed) => {\n    wasm.ext_sr_from_seed(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(seed));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, secret, message) => {\n    wasm.ext_sr_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(secret), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sr25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey) => {\n    const ret = wasm.ext_sr_verify(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(signature), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey));\n    return ret !== 0;\n});\nconst sr25519Agree = /*#__PURE__*/ withWasm((wasm, pubkey, secret) => {\n    wasm.ext_sr_agree(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(secret));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst vrfSign = /*#__PURE__*/ withWasm((wasm, secret, context, message, extra) => {\n    wasm.ext_vrf_sign(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(secret), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(context), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(extra));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst vrfVerify = /*#__PURE__*/ withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n    const ret = wasm.ext_vrf_verify(..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(pubkey), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(context), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(message), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(extra), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(outAndProof));\n    return ret !== 0;\n});\nconst blake2b = /*#__PURE__*/ withWasm((wasm, data, key, size) => {\n    wasm.ext_blake2b(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(key), size);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst hmacSha256 = /*#__PURE__*/ withWasm((wasm, key, data) => {\n    wasm.ext_hmac_sha256(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(key), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst hmacSha512 = /*#__PURE__*/ withWasm((wasm, key, data) => {\n    wasm.ext_hmac_sha512(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(key), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst keccak256 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_keccak256(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst keccak512 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_keccak512(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst pbkdf2 = /*#__PURE__*/ withWasm((wasm, data, salt, rounds) => {\n    wasm.ext_pbkdf2(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(salt), rounds);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst scrypt = /*#__PURE__*/ withWasm((wasm, password, salt, log2n, r, p) => {\n    wasm.ext_scrypt(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(password), ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(salt), log2n, r, p);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sha256 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_sha256(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst sha512 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_sha512(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data));\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nconst twox = /*#__PURE__*/ withWasm((wasm, data, rounds) => {\n    wasm.ext_twox(8, ..._init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.allocU8a(data), rounds);\n    return _init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.resultU8a();\n});\nfunction isReady() {\n    return !!_init_js__WEBPACK_IMPORTED_MODULE_1__.bridge.wasm;\n}\nasync function waitReady() {\n    try {\n        const wasm = await (0,_init_js__WEBPACK_IMPORTED_MODULE_1__.initBridge)();\n        return !!wasm;\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto/bundle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto/init.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto/init.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bridge: () => (/* binding */ bridge),\n/* harmony export */   initBridge: () => (/* binding */ initBridge)\n/* harmony export */ });\n/* harmony import */ var _polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polkadot/wasm-bridge */ \"(ssr)/./node_modules/@polkadot/wasm-bridge/bridge.js\");\n/* harmony import */ var _polkadot_wasm_crypto_init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/wasm-crypto-init */ \"(ssr)/./node_modules/@polkadot/wasm-crypto-init/wasm.js\");\n\n\n/**\n * @name bridge\n * @description\n * The JS <-> WASM bridge that is in operation. For the specific package\n * it is a global, i.e. all operations happens on this specific bridge\n */\nconst bridge = new _polkadot_wasm_bridge__WEBPACK_IMPORTED_MODULE_0__.Bridge(_polkadot_wasm_crypto_init__WEBPACK_IMPORTED_MODULE_1__.createWasm);\n/**\n * @name initBridge\n * @description\n * Creates a new bridge interface with the (optional) initialization function\n */\nasync function initBridge(createWasm) {\n    return bridge.init(createWasm);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvL2luaXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQUNTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1CQUFtQix5REFBTSxDQUFDLGtFQUFVO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC93YXNtLWNyeXB0by9pbml0LmpzPzAzY2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnJpZGdlIH0gZnJvbSAnQHBvbGthZG90L3dhc20tYnJpZGdlJztcbmltcG9ydCB7IGNyZWF0ZVdhc20gfSBmcm9tICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8taW5pdCc7XG4vKipcbiAqIEBuYW1lIGJyaWRnZVxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgSlMgPC0+IFdBU00gYnJpZGdlIHRoYXQgaXMgaW4gb3BlcmF0aW9uLiBGb3IgdGhlIHNwZWNpZmljIHBhY2thZ2VcbiAqIGl0IGlzIGEgZ2xvYmFsLCBpLmUuIGFsbCBvcGVyYXRpb25zIGhhcHBlbnMgb24gdGhpcyBzcGVjaWZpYyBicmlkZ2VcbiAqL1xuZXhwb3J0IGNvbnN0IGJyaWRnZSA9IG5ldyBCcmlkZ2UoY3JlYXRlV2FzbSk7XG4vKipcbiAqIEBuYW1lIGluaXRCcmlkZ2VcbiAqIEBkZXNjcmlwdGlvblxuICogQ3JlYXRlcyBhIG5ldyBicmlkZ2UgaW50ZXJmYWNlIHdpdGggdGhlIChvcHRpb25hbCkgaW5pdGlhbGl6YXRpb24gZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRCcmlkZ2UoY3JlYXRlV2FzbSkge1xuICAgIHJldHVybiBicmlkZ2UuaW5pdChjcmVhdGVXYXNtKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto/init.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-crypto/packageInfo.js":
/*!***********************************************************!*\
  !*** ./node_modules/@polkadot/wasm-crypto/packageInfo.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/wasm-crypto', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/wasm-crypto/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/wasm-crypto/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '7.3.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tY3J5cHRvL3BhY2thZ2VJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxzQkFBc0Isc0NBQXNDLEtBQThCLFlBQVksNEhBQWUsZ0NBQWdDLDRIQUFlLG1DQUFtQyxDQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS1jcnlwdG8vcGFja2FnZUluZm8uanM/ZjgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3Qvd2FzbS1jcnlwdG8nLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICc3LjMuMicgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-crypto/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-util/base64.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-util/base64.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: () => (/* binding */ base64Decode)\n/* harmony export */ });\nconst CHR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst map = new Array(256);\nfor (let i = 0, count = CHR.length; i < count; i++) {\n    map[CHR.charCodeAt(i)] = i;\n}\n/**\n * @name base64Decode\n * @description\n * A base64 decoding function that operates in all environments. Unlike decoding\n * from Buffer (Node.js only) or atob (browser-only) this implementation is\n * slightly slower, but it is platform independent.\n *\n * For our usage, since we have access to the static final size, so we decode\n * to a specified output buffer. This also means we have applied a number of\n * optimizations based on this - checking output position instead of chars.\n */\nfunction base64Decode(data, out) {\n    let byte = 0;\n    let bits = 0;\n    let pos = -1;\n    for (let i = 0, last = out.length - 1; pos !== last; i++) {\n        // each character represents 6 bits\n        byte = (byte << 6) | map[data.charCodeAt(i)];\n        // each byte needs to contain 8 bits\n        if ((bits += 6) >= 8) {\n            out[++pos] = (byte >>> (bits -= 8)) & 0xff;\n        }\n    }\n    return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3dhc20tdXRpbC9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxvQ0FBb0MsV0FBVztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGNBQWM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3Qvd2FzbS11dGlsL2Jhc2U2NC5qcz81YjEyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENIUiA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJztcbmNvbnN0IG1hcCA9IG5ldyBBcnJheSgyNTYpO1xuZm9yIChsZXQgaSA9IDAsIGNvdW50ID0gQ0hSLmxlbmd0aDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICBtYXBbQ0hSLmNoYXJDb2RlQXQoaSldID0gaTtcbn1cbi8qKlxuICogQG5hbWUgYmFzZTY0RGVjb2RlXG4gKiBAZGVzY3JpcHRpb25cbiAqIEEgYmFzZTY0IGRlY29kaW5nIGZ1bmN0aW9uIHRoYXQgb3BlcmF0ZXMgaW4gYWxsIGVudmlyb25tZW50cy4gVW5saWtlIGRlY29kaW5nXG4gKiBmcm9tIEJ1ZmZlciAoTm9kZS5qcyBvbmx5KSBvciBhdG9iIChicm93c2VyLW9ubHkpIHRoaXMgaW1wbGVtZW50YXRpb24gaXNcbiAqIHNsaWdodGx5IHNsb3dlciwgYnV0IGl0IGlzIHBsYXRmb3JtIGluZGVwZW5kZW50LlxuICpcbiAqIEZvciBvdXIgdXNhZ2UsIHNpbmNlIHdlIGhhdmUgYWNjZXNzIHRvIHRoZSBzdGF0aWMgZmluYWwgc2l6ZSwgc28gd2UgZGVjb2RlXG4gKiB0byBhIHNwZWNpZmllZCBvdXRwdXQgYnVmZmVyLiBUaGlzIGFsc28gbWVhbnMgd2UgaGF2ZSBhcHBsaWVkIGEgbnVtYmVyIG9mXG4gKiBvcHRpbWl6YXRpb25zIGJhc2VkIG9uIHRoaXMgLSBjaGVja2luZyBvdXRwdXQgcG9zaXRpb24gaW5zdGVhZCBvZiBjaGFycy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJhc2U2NERlY29kZShkYXRhLCBvdXQpIHtcbiAgICBsZXQgYnl0ZSA9IDA7XG4gICAgbGV0IGJpdHMgPSAwO1xuICAgIGxldCBwb3MgPSAtMTtcbiAgICBmb3IgKGxldCBpID0gMCwgbGFzdCA9IG91dC5sZW5ndGggLSAxOyBwb3MgIT09IGxhc3Q7IGkrKykge1xuICAgICAgICAvLyBlYWNoIGNoYXJhY3RlciByZXByZXNlbnRzIDYgYml0c1xuICAgICAgICBieXRlID0gKGJ5dGUgPDwgNikgfCBtYXBbZGF0YS5jaGFyQ29kZUF0KGkpXTtcbiAgICAgICAgLy8gZWFjaCBieXRlIG5lZWRzIHRvIGNvbnRhaW4gOCBiaXRzXG4gICAgICAgIGlmICgoYml0cyArPSA2KSA+PSA4KSB7XG4gICAgICAgICAgICBvdXRbKytwb3NdID0gKGJ5dGUgPj4+IChiaXRzIC09IDgpKSAmIDB4ZmY7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-util/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/wasm-util/fflate.js":
/*!****************************************************!*\
  !*** ./node_modules/@polkadot/wasm-util/fflate.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unzlibSync: () => (/* binding */ unzlibSync)\n/* harmony export */ });\nconst u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\nconst freb = (eb, start) => {\n    const b = new u16(31);\n    for (let i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    const r = new u32(b[30]);\n    for (let i = 1; i < 30; ++i) {\n        for (let j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nconst [fl, revfl] = freb(fleb, 2);\nfl[28] = 258, revfl[258] = 28;\nconst [fd] = freb(fdeb, 0);\nconst rev = new u16(32768);\nfor (let i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    let x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\nconst hMap = ((cd, mb, r) => {\n    const s = cd.length;\n    // index\n    let i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    const l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    const le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    let co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        const rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                const sv = (i << 4) | cd[i];\n                // free bits\n                const r = mb - cd[i];\n                // start value\n                let v = le[cd[i] - 1]++ << r;\n                // m is end value\n                for (const m = v | ((1 << r) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\nconst flt = new u8(288);\nfor (let i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (let i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (let i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (let i = 280; i < 288; ++i)\n    flt[i] = 8;\nconst fdt = new u8(32);\nfor (let i = 0; i < 32; ++i)\n    fdt[i] = 5;\nconst flrm = hMap(flt, 9, 1);\nconst fdrm = hMap(fdt, 5, 1);\nconst bits = (d, p, m) => {\n    const o = p >>> 3;\n    return ((d[o] | (d[o + 1] << 8)) >>> (p & 7)) & m;\n};\nconst bits16 = (d, p) => {\n    const o = p >>> 3;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >>> (p & 7));\n};\nconst shft = (p) => (p >>> 3) + (p & 7 && 1);\nconst slc = (v, s, e) => {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\nconst max = (a) => {\n    let m = a[0];\n    for (let i = 1, count = a.length; i < count; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\nconst inflt = (dat, buf, st) => {\n    const noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // source length\n    const sl = dat.length;\n    // have to estimate size\n    const noBuf = !buf || !noSt;\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    const cbuf = (l) => {\n        let bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            const nbuf = new u8(Math.max(bl << 1, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    if (final && !lm)\n        return buf;\n    // total bits\n    const tbts = sl << 3;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            const type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t << 3;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                const tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                const ldt = new u8(tl);\n                // code length tree\n                const clt = new u8(19);\n                for (let i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                const clb = max(clt), clbmsk = (1 << clb) - 1;\n                if (!noSt && pos + tl * (clb + 7) > tbts)\n                    break;\n                // code lengths map\n                const clm = hMap(clt, clb, 1);\n                for (let i = 0; i < tl;) {\n                    const r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    const s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        let c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts)\n                throw 'unexpected EOF';\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        const mxa = lbt + dbt + 18;\n        while (noSt || pos + mxa < tbts) {\n            // bits read, code\n            const c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts)\n                throw 'unexpected EOF';\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lm = undefined;\n                break;\n            }\n            else {\n                let add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    const i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                let dt = fd[dsym];\n                if (dsym > 3) {\n                    const b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts)\n                    throw 'unexpected EOF';\n                if (noBuf)\n                    cbuf(bt + 131072);\n                const end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = pos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\nconst zlv = (d) => {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/wasm-util/fflate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-bigint/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/x-bigint/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BigInt: () => (/* binding */ BigInt),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo)\n/* harmony export */ });\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polkadot/x-global */ \"(ssr)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/x-bigint/packageInfo.js\");\n\n\n/**\n * @internal\n *\n * There are _still_ some older environments (specifically RN < 0.70), that does\n * not have proper BigInt support - a non-working fallback is provided for those.\n *\n * We detect availability of BigInt upon usage, so this is purely to allow functional\n * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish\n * result is used here.\n */\nfunction invalidFallback() {\n    return Number.NaN;\n}\nconst BigInt = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.extractGlobal)('BigInt', invalidFallback);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUQ7QUFDSjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZCQUE2QixpRUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L2luZGV4LmpzPzgwZmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0cmFjdEdsb2JhbCB9IGZyb20gJ0Bwb2xrYWRvdC94LWdsb2JhbCc7XG5leHBvcnQgeyBwYWNrYWdlSW5mbyB9IGZyb20gJy4vcGFja2FnZUluZm8uanMnO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqXG4gKiBUaGVyZSBhcmUgX3N0aWxsXyBzb21lIG9sZGVyIGVudmlyb25tZW50cyAoc3BlY2lmaWNhbGx5IFJOIDwgMC43MCksIHRoYXQgZG9lc1xuICogbm90IGhhdmUgcHJvcGVyIEJpZ0ludCBzdXBwb3J0IC0gYSBub24td29ya2luZyBmYWxsYmFjayBpcyBwcm92aWRlZCBmb3IgdGhvc2UuXG4gKlxuICogV2UgZGV0ZWN0IGF2YWlsYWJpbGl0eSBvZiBCaWdJbnQgdXBvbiB1c2FnZSwgc28gdGhpcyBpcyBwdXJlbHkgdG8gYWxsb3cgZnVuY3Rpb25hbFxuICogY29tcGlsYXRpb24gJiBidW5kbGluZy4gU2luY2Ugd2UgaGF2ZSBvcGVyYXRvcnMgc3VjaCBhcyAqKy0vIHRvcC1sZXZlbCwgYSBudW1iZXItaXNoXG4gKiByZXN1bHQgaXMgdXNlZCBoZXJlLlxuICovXG5mdW5jdGlvbiBpbnZhbGlkRmFsbGJhY2soKSB7XG4gICAgcmV0dXJuIE51bWJlci5OYU47XG59XG5leHBvcnQgY29uc3QgQmlnSW50ID0gLyojX19QVVJFX18qLyBleHRyYWN0R2xvYmFsKCdCaWdJbnQnLCBpbnZhbGlkRmFsbGJhY2spO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-bigint/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-bigint/packageInfo.js":
/*!********************************************************!*\
  !*** ./node_modules/@polkadot/x-bigint/packageInfo.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-bigint', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-bigint/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-bigint/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '12.6.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtYmlnaW50L3BhY2thZ2VJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxzQkFBc0IsbUNBQW1DLEtBQThCLFlBQVkseUhBQWUsZ0NBQWdDLHlIQUFlLG1DQUFtQyxDQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1iaWdpbnQvcGFja2FnZUluZm8uanM/NThiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3QveC1iaWdpbnQnLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMi42LjInIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-bigint/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-global/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@polkadot/x-global/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exposeGlobal: () => (/* binding */ exposeGlobal),\n/* harmony export */   extractGlobal: () => (/* binding */ extractGlobal),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),\n/* harmony export */   xglobal: () => (/* binding */ xglobal)\n/* harmony export */ });\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/x-global/packageInfo.js\");\n\n/** @internal Last-resort \"this\", if it gets here it probably would fail anyway */\nfunction evaluateThis(fn) {\n    return fn('return this');\n}\n/**\n * A cross-environment implementation for globalThis\n */\nconst xglobal = /*#__PURE__*/ (typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n        ? global\n        : typeof self !== 'undefined'\n            ? self\n            : typeof window !== 'undefined'\n                ? window\n                : evaluateThis(Function));\n/**\n * Extracts a known global from the environment, applying a fallback if not found\n */\nfunction extractGlobal(name, fallback) {\n    // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n    // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n    //\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return typeof xglobal[name] === 'undefined'\n        ? fallback\n        : xglobal[name];\n}\n/**\n * Expose a value as a known global, if not already defined\n */\nfunction exposeGlobal(name, fallback) {\n    if (typeof xglobal[name] === 'undefined') {\n        xglobal[name] = fallback;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtZ2xvYmFsL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtZ2xvYmFsL2luZGV4LmpzP2E1YTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbi8qKiBAaW50ZXJuYWwgTGFzdC1yZXNvcnQgXCJ0aGlzXCIsIGlmIGl0IGdldHMgaGVyZSBpdCBwcm9iYWJseSB3b3VsZCBmYWlsIGFueXdheSAqL1xuZnVuY3Rpb24gZXZhbHVhdGVUaGlzKGZuKSB7XG4gICAgcmV0dXJuIGZuKCdyZXR1cm4gdGhpcycpO1xufVxuLyoqXG4gKiBBIGNyb3NzLWVudmlyb25tZW50IGltcGxlbWVudGF0aW9uIGZvciBnbG9iYWxUaGlzXG4gKi9cbmV4cG9ydCBjb25zdCB4Z2xvYmFsID0gLyojX19QVVJFX18qLyAodHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxUaGlzXG4gICAgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICA/IGdsb2JhbFxuICAgICAgICA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyBzZWxmXG4gICAgICAgICAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgPyB3aW5kb3dcbiAgICAgICAgICAgICAgICA6IGV2YWx1YXRlVGhpcyhGdW5jdGlvbikpO1xuLyoqXG4gKiBFeHRyYWN0cyBhIGtub3duIGdsb2JhbCBmcm9tIHRoZSBlbnZpcm9ubWVudCwgYXBwbHlpbmcgYSBmYWxsYmFjayBpZiBub3QgZm91bmRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RHbG9iYWwobmFtZSwgZmFsbGJhY2spIHtcbiAgICAvLyBOb3QgcXVpdGUgc3VyZSB3aHkgdGhpcyBpcyBoZXJlIC0gc251Y2sgaW4gd2l0aCBUUyA0LjcuMiB3aXRoIG5vIHJlYWwgaWRlYVxuICAgIC8vIChhcyBvZiBub3cpIGFzIHRvIHdoeSB0aGlzIGxvb2tzIGxpa2UgYW4gXCJhbnlcIiB3aGVuIHdlIGRvIGNhc3QgaXQgdG8gYSBUXG4gICAgLy9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1yZXR1cm5cbiAgICByZXR1cm4gdHlwZW9mIHhnbG9iYWxbbmFtZV0gPT09ICd1bmRlZmluZWQnXG4gICAgICAgID8gZmFsbGJhY2tcbiAgICAgICAgOiB4Z2xvYmFsW25hbWVdO1xufVxuLyoqXG4gKiBFeHBvc2UgYSB2YWx1ZSBhcyBhIGtub3duIGdsb2JhbCwgaWYgbm90IGFscmVhZHkgZGVmaW5lZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZXhwb3NlR2xvYmFsKG5hbWUsIGZhbGxiYWNrKSB7XG4gICAgaWYgKHR5cGVvZiB4Z2xvYmFsW25hbWVdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB4Z2xvYmFsW25hbWVdID0gZmFsbGJhY2s7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-global/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-global/packageInfo.js":
/*!********************************************************!*\
  !*** ./node_modules/@polkadot/x-global/packageInfo.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-global', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-global/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-global/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '12.6.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtZ2xvYmFsL3BhY2thZ2VJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxzQkFBc0IsbUNBQW1DLEtBQThCLFlBQVkseUhBQWUsZ0NBQWdDLHlIQUFlLG1DQUFtQyxDQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1nbG9iYWwvcGFja2FnZUluZm8uanM/MjcyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3QveC1nbG9iYWwnLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMi42LjInIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-global/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-randomvalues/node.js":
/*!*******************************************************!*\
  !*** ./node_modules/@polkadot/x-randomvalues/node.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: () => (/* binding */ crypto),\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/x-global */ \"(ssr)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/x-randomvalues/packageInfo.js\");\n\n\n\nconst crypto = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__.extractGlobal)('crypto', node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto);\nfunction getRandomValues(output) {\n    return crypto.getRandomValues(output);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtcmFuZG9tdmFsdWVzL25vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFDO0FBQ2M7QUFDSjtBQUN4Qyw2QkFBNkIsaUVBQWEsV0FBVyxrREFBb0I7QUFDekU7QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMvbm9kZS5qcz9iYmExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBub2RlQ3J5cHRvIGZyb20gJ25vZGU6Y3J5cHRvJztcbmltcG9ydCB7IGV4dHJhY3RHbG9iYWwgfSBmcm9tICdAcG9sa2Fkb3QveC1nbG9iYWwnO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbmV4cG9ydCBjb25zdCBjcnlwdG8gPSAvKiNfX1BVUkVfXyovIGV4dHJhY3RHbG9iYWwoJ2NyeXB0bycsIG5vZGVDcnlwdG8ud2ViY3J5cHRvKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21WYWx1ZXMob3V0cHV0KSB7XG4gICAgcmV0dXJuIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMob3V0cHV0KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-randomvalues/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-randomvalues/packageInfo.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polkadot/x-randomvalues/packageInfo.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-randomvalues', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-randomvalues/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-randomvalues/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '12.6.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtcmFuZG9tdmFsdWVzL3BhY2thZ2VJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxzQkFBc0IseUNBQXlDLEtBQThCLFlBQVksK0hBQWUsZ0NBQWdDLCtIQUFlLG1DQUFtQyxDQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMvcGFja2FnZUluZm8uanM/YzVjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFja2FnZUluZm8gPSB7IG5hbWU6ICdAcG9sa2Fkb3QveC1yYW5kb212YWx1ZXMnLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMi42LjInIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-randomvalues/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-textdecoder/node.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/x-textdecoder/node.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextDecoder: () => (/* binding */ TextDecoder),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo)\n/* harmony export */ });\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/x-global */ \"(ssr)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/x-textdecoder/packageInfo.js\");\n\n\n\nconst TextDecoder = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__.extractGlobal)('TextDecoder', node_util__WEBPACK_IMPORTED_MODULE_0__.TextDecoder);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtdGV4dGRlY29kZXIvbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QjtBQUNzQjtBQUNKO0FBQ3hDLGtDQUFrQyxpRUFBYSxnQkFBZ0Isa0RBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZGVjb2Rlci9ub2RlLmpzP2JjZWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHV0aWwgZnJvbSAnbm9kZTp1dGlsJztcbmltcG9ydCB7IGV4dHJhY3RHbG9iYWwgfSBmcm9tICdAcG9sa2Fkb3QveC1nbG9iYWwnO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbmV4cG9ydCBjb25zdCBUZXh0RGVjb2RlciA9IC8qI19fUFVSRV9fKi8gZXh0cmFjdEdsb2JhbCgnVGV4dERlY29kZXInLCB1dGlsLlRleHREZWNvZGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-textdecoder/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-textdecoder/packageInfo.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/x-textdecoder/packageInfo.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-textdecoder', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-textdecoder/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-textdecoder/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '12.6.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtdGV4dGRlY29kZXIvcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHNCQUFzQix3Q0FBd0MsS0FBOEIsWUFBWSw4SEFBZSxnQ0FBZ0MsOEhBQWUsbUNBQW1DLENBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LXRleHRkZWNvZGVyL3BhY2thZ2VJbmZvLmpzPzRmYTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L3gtdGV4dGRlY29kZXInLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMi42LjInIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-textdecoder/packageInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-textencoder/node.js":
/*!******************************************************!*\
  !*** ./node_modules/@polkadot/x-textencoder/node.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextEncoder: () => (/* binding */ TextEncoder),\n/* harmony export */   packageInfo: () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo)\n/* harmony export */ });\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polkadot/x-global */ \"(ssr)/./node_modules/@polkadot/x-global/index.js\");\n/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageInfo.js */ \"(ssr)/./node_modules/@polkadot/x-textencoder/packageInfo.js\");\n\n\n\nclass Fallback {\n    __internal__encoder;\n    constructor() {\n        this.__internal__encoder = new node_util__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();\n    }\n    // For a Jest 26.0.1 environment, Buffer !== Uint8Array\n    encode(value) {\n        return Uint8Array.from(this.__internal__encoder.encode(value));\n    }\n}\nconst TextEncoder = /*#__PURE__*/ (0,_polkadot_x_global__WEBPACK_IMPORTED_MODULE_2__.extractGlobal)('TextEncoder', Fallback);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtdGV4dGVuY29kZXIvbm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QjtBQUNzQjtBQUNKO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxrREFBZ0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLGlFQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQtbmV4dC8uL25vZGVfbW9kdWxlcy9AcG9sa2Fkb3QveC10ZXh0ZW5jb2Rlci9ub2RlLmpzPzQ0MDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHV0aWwgZnJvbSAnbm9kZTp1dGlsJztcbmltcG9ydCB7IGV4dHJhY3RHbG9iYWwgfSBmcm9tICdAcG9sa2Fkb3QveC1nbG9iYWwnO1xuZXhwb3J0IHsgcGFja2FnZUluZm8gfSBmcm9tICcuL3BhY2thZ2VJbmZvLmpzJztcbmNsYXNzIEZhbGxiYWNrIHtcbiAgICBfX2ludGVybmFsX19lbmNvZGVyO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9faW50ZXJuYWxfX2VuY29kZXIgPSBuZXcgdXRpbC5UZXh0RW5jb2RlcigpO1xuICAgIH1cbiAgICAvLyBGb3IgYSBKZXN0IDI2LjAuMSBlbnZpcm9ubWVudCwgQnVmZmVyICE9PSBVaW50OEFycmF5XG4gICAgZW5jb2RlKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBVaW50OEFycmF5LmZyb20odGhpcy5fX2ludGVybmFsX19lbmNvZGVyLmVuY29kZSh2YWx1ZSkpO1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBUZXh0RW5jb2RlciA9IC8qI19fUFVSRV9fKi8gZXh0cmFjdEdsb2JhbCgnVGV4dEVuY29kZXInLCBGYWxsYmFjayk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-textencoder/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polkadot/x-textencoder/packageInfo.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polkadot/x-textencoder/packageInfo.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packageInfo: () => (/* binding */ packageInfo)\n/* harmony export */ });\nconst packageInfo = { name: '@polkadot/x-textencoder', path: ( true) ? new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-textencoder/packageInfo.js\").pathname.substring(0, new URL(\"file:///Users/bartek/Downloads/Programowanie/Commune-new-nextjs/frontend/node_modules/@polkadot/x-textencoder/packageInfo.js\").pathname.lastIndexOf('/') + 1) : 0, type: 'esm', version: '12.6.2' };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbGthZG90L3gtdGV4dGVuY29kZXIvcGFja2FnZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLHNCQUFzQix3Q0FBd0MsS0FBOEIsWUFBWSw4SEFBZSxnQ0FBZ0MsOEhBQWUsbUNBQW1DLENBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bwb2xrYWRvdC94LXRleHRlbmNvZGVyL3BhY2thZ2VJbmZvLmpzPzQ1ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBhY2thZ2VJbmZvID0geyBuYW1lOiAnQHBvbGthZG90L3gtdGV4dGVuY29kZXInLCBwYXRoOiAoaW1wb3J0Lm1ldGEgJiYgaW1wb3J0Lm1ldGEudXJsKSA/IG5ldyBVUkwoaW1wb3J0Lm1ldGEudXJsKS5wYXRobmFtZS5zdWJzdHJpbmcoMCwgbmV3IFVSTChpbXBvcnQubWV0YS51cmwpLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykgKyAxKSA6ICdhdXRvJywgdHlwZTogJ2VzbScsIHZlcnNpb246ICcxMi42LjInIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polkadot/x-textencoder/packageInfo.js\n");

/***/ })

};
;